#General
epicsEnvSet("ECMC_MOTOR_NAME",            "${AX_NAME}")
epicsEnvSet("ECMC_R",                     "${AX_NAME}-")
epicsEnvSet("ECMC_AXIS_NO",               "${AX_ID}")
epicsEnvSet("ECMC_DESC",                  "${AX_DESC}")
epicsEnvSet("ECMC_EGU",                   "${AX_EGU}")                # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE larger than 0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance

#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "0")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)

#Trajectory
epicsEnvSet("ECMC_VELO",                  "${AX_VELO}")
epicsEnvSet("ECMC_JOG_VEL",               "${AX_VELO}")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
ecmcEpicsEnvSetCalc("ECMC_ACCS_EGU_PER_S2","${AX_VELO}/10","%lf")
ecmcEpicsEnvSetCalc("ECMC_EMERG_DECEL",    "${AX_VELO}/10","%lf")

#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
ecmcEpicsEnvSetCalc("ECMC_HOME_VEL_TO",   "${AX_VELO}/10", "%lf")
ecmcEpicsEnvSetCalc("ECMC_HOME_VEL_FRM",  "${AX_VELO}/10", "%lf")
epicsEnvSet("ECMC_HOME_ACC",              "${ECMC_ACCS_EGU_PER_S2}")
epicsEnvSet("ECMC_HOME_DEC",              "${ECMC_ACCS_EGU_PER_S2}")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing

#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input

# Softlimits (disable with 0,0)
ecmcEpicsEnvSetCalc("ECMC_SOFT_LOW_LIM",  "-${AX_MOD}/2", "%lf")
ecmcEpicsEnvSetCalc("ECMC_SOFT_HIGH_LIM", "${AX_MOD}/2", "%lf")
epicsEnvSet("ECMC_DXLM_ENABLE",           "1")

# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")

# At target
ecmcEpicsEnvSetCalc("ECMC_MON_AT_TARGET_TOL",     "${AX_MOD}/20","%lf")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")

# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "0")
