#
# Start at "2023-W09-Mar03-1316-22-CET"
#
# Version information:
# European Spallation Source ERIC : iocsh (4.0.0-PID-23055)
#
# --->--> snip -->--> 
# Please Use Version and other environment variables
# in order to report or debug this shell
#
# HOSTDISPLAY=""
# WINDOWID="27262979"
# PWD="/home/anderssandstrom/sources/clock_and_stereo/xy_table"
# USER="anderssandstrom"
# LOGNAME="anderssandstrom"
# EPICS_HOST_ARCH="linux-x86_64"
# EPICS_BASE="/home/anderssandstrom/sources/base-7.0.6.1"
# E3_REQUIRE_NAME="require"
# E3_REQUIRE_VERSION="4.0.0"
# E3_REQUIRE_LOCATION="/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0"
# E3_REQUIRE_BIN="/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/bin"
# E3_REQUIRE_DB="/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/db"
# E3_REQUIRE_DBD="/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/dbd"
# E3_REQUIRE_INC="/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/include"
# E3_REQUIRE_LIB="/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/lib"
# EPICS_DRIVER_PATH="/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods"
# EPICS_CA_AUTO_ADDR_LIST=""
# EPICS_CA_ADDR_LIST=""
# EPICS_PVA_AUTO_ADDR_LIST=""
# EPICS_PVA_ADDR_LIST=""
# PATH="/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/bin:/home/anderssandstrom/sources/base-7.0.6.1/bin/linux-x86_64:/opt/conda/condabin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/anderssandstrom/.local/bin:/home/anderssandstrom/bin"
# --->--> snip -->--> 
#
# Set REQUIRE_IOC for its internal PVs
epicsEnvSet REQUIRE_IOC "REQMOD:localhost-23055"
#
# Enable an exit subroutine for sotfioc
dbLoadRecords "/home/anderssandstrom/sources/base-7.0.6.1/db/softIocExit.db" "IOC=REQMOD:localhost-23055"
#
# Set E3_IOCSH_TOP for the absolute path where iocsh is executed.
epicsEnvSet E3_IOCSH_TOP "/home/anderssandstrom/sources/clock_and_stereo/xy_table"
#
# 
# Load require module, which has the version 4.0.0
# 
dlload /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/lib/linux-x86_64/librequire.so
dbLoadDatabase /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/dbd/require.dbd
require_registerRecordDeviceDriver
Loading module info records for require
# 
# Set E3_CMD_TOP for the absolute path where xy_table.script exists
epicsEnvSet E3_CMD_TOP "/home/anderssandstrom/sources/clock_and_stereo/xy_table"
#
iocshLoad 'xy_table.script',''
##############################################################################
## Demo xy table
##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"IOC_TEST")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"iocshLoad")
require ecmccfg master
Module ecmccfg version master found in /home/anderssandstrom/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/
Loading library /home/anderssandstrom/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/lib/linux-x86_64/libecmccfg.so
Loaded ecmccfg version master
Loading dbd file /home/anderssandstrom/cellMods//base-7.0.6.1/require-4.0.0/ecmccfg/master/dbd/ecmccfg.dbd
Calling function ecmccfg_registerRecordDeviceDriver
Loading module info records for ecmccfg
# run module startup.cmd (only needed at ESS  PSI auto call at require)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/startup.cmd, "IOC=IOC_TEST,ECMC_VER=master,EC_RATE=500"
#==============================================================================
# startup.cmd
on error halt
require ecmc        "master"
Module ecmc version master found in /home/anderssandstrom/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/
Module ecmc depends on asyn 4.42.0+0
Module asyn version 4.42.0+0 found in /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/
Loading library /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/lib/linux-x86_64/libasyn.so
Loaded asyn version 4.42.0+0
Loading dbd file /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/asyn/4.42.0+0/dbd/asyn.dbd
Calling function asyn_registerRecordDeviceDriver
Loading module info records for asyn
Module ecmc depends on exprtk 1.2.1+0
Module exprtk version 1.2.1+0 found in /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/exprtk/1.2.1+0/
Loading library /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/exprtk/1.2.1+0/lib/linux-x86_64/libexprtk.so
Loaded exprtk version 1.2.1+0
exprtk has no dbd file
Loading module info records for exprtk
Module ecmc depends on motor 7.0.7+0
Module motor version 7.0.7+0 found in /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/
Module motor depends on asyn 4.42.0+0
Module asyn version 4.42.0+0 already loaded
Loading library /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/lib/linux-x86_64/libmotor.so
Loaded motor version 7.0.7+0
Loading dbd file /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/motor/7.0.7+0/dbd/motor.dbd
Calling function motor_registerRecordDeviceDriver
Loading module info records for motor
Module ecmc depends on ruckig 1.0.0+0
Module ruckig version 1.0.0+0 found in /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/ruckig/1.0.0+0/
Loading library /home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods/ruckig/1.0.0+0/lib/linux-x86_64/libruckig.so
Loaded ruckig version 1.0.0+0
ruckig has no dbd file
Loading module info records for ruckig
Loading library /home/anderssandstrom/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/lib/linux-x86_64/libecmc.so
Loaded ecmc version master
Loading dbd file /home/anderssandstrom/cellMods//base-7.0.6.1/require-4.0.0/ecmc/master/dbd/ecmc.dbd
Calling function ecmc_registerRecordDeviceDriver
Loading module info records for ecmc
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'ecmcMotorRecord'='EthercatMC'", "require  EthercatMC 3.0.2 # Using EthercatMC motor record support.","# Using ecmcMotorRecord motor record support.")
# Using ecmcMotorRecord motor record support.
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_CONFIG_ROOT",     "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/")
epicsEnvSet("ECMC_CONFIG_DB",       "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/db/")
epicsEnvSet("SCRIPTEXEC",           "iocshLoad")
epicsEnvSet("SM_PREFIX",            "IOC_TEST:")    # colon added since IOC is _not_ PREFIX
epicsEnvSet("ECMC_PROC_HOOK",       "")
epicsEnvSet(ECMC_MODE, FULL)
ecmcEpicsEnvSetCalcTernary(ECMC_SUPPORT_MOTION, "'FULL'!='DAQ'","","# MODE == DAQ, DISABLING MOTION.")
epicsEnvShow(ECMC_SUPPORT_MOTION)
ECMC_SUPPORT_MOTION=
ecmcEpicsEnvSetCalcTernary(ECMC_USE_MOTOR_RECORD, "'FULL'=='FULL'","","# MODE != FULL, DISABLING MOTOR RECORD.")
epicsEnvShow(ECMC_USE_MOTOR_RECORD)
ECMC_USE_MOTOR_RECORD=
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAll.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAll.cmd"
#==============================================================================
# initAll.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/init.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/init.cmd
#==============================================================================
# init.cmd
epicsEnvSet("ECMC_ASYN_TIMEOUT",      1)                   # Asyn timeout
epicsEnvSet("ECMC_ASYN_ADDR",         0)                   # Asyn Address
epicsEnvSet("ECMC_MOTOR_PORT",        "NOT SET")
epicsEnvSet("ECMC_ASYN_PORT",         "NOT SET")
epicsEnvSet("ECMC_PREFIX",            "NOT SET")
epicsEnvSet("ECMC_GEN_EC_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_GEN_AX_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_EC_AXIS_HEALTH",    "NOT SET")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS", "NOT SET")
epicsEnvSet("ECMC_TSE",               0)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAxis.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/initAxis.cmd"
#==============================================================================
# initAxis.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd"
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd"
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
ep2023/03/03 13:16:23.058 
ECMC Initializes.............
2023/03/03 13:16:23.058 ESS Open Source EtherCAT Motion Control Epics Module2023/03/03 13:16:23.058 
Mode: Configuration
icsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_11)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_12)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_13)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_14)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_15)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_16)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_17)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_18)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_19)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_20)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
epicsEnvSet("ECMC_EGU",               "mm")
epicsEnvSet("ECMC_PREC",              3)
epicsEnvSet("ECMC_AXISFIELDINIT",     "")                  # Extra field init to motor record
epicsEnvSet("ECMC_AXISCONFIG",        "")                  # Extra parameters to driver
############################################################
############# ASYN Configuration:
epicsEnvSet("ECMC_MOTOR_PORT"     "MCU1")
epicsEnvSet("ECMC_ASYN_PORT"      "MC_CPU1")
epicsEnvSet("ECMC_PREFIX"         "IOC_TEST:")
ecmcAsynPortDriverConfigure(MC_CPU1,1000,0,0,100)
ecmcAsynPortDriverConfigure: portName = MC_CPU1, paramTableSize = 1000, disableAutoConnect = 0, priority = 0, defaultSampleRateMS = 100.000000
asynOctetSetOutputEos(MC_CPU1, -1, ";\n")
asynOctetSetInputEos(MC_CPU1, -1, ";\n")
asynSetTraceMask(MC_CPU1, -1, 0x41)
asynSetTraceIOMask(MC_CPU1, -1, 6)
asynSetTraceInfoMask(MC_CPU1, -1, 1)
ecmcMotorRecordCreateController(MCU1, MC_CPU1, "64", 200, 1000, "")
############################################################
############# Misc settings:
# Disable function call trace printouts
ecmcConfigOrDie "Cfg.SetEnableFuncCallDiag(0)"
OK
# Disable on change printouts from objects (enable for easy logging)
ecmcConfigOrDie "Cfg.SetTraceMaskBit(15,0)"
OK
# Choose to generate EPICS-records for EtherCAT-entries
# (For records use ECMC_GEN_EC_RECORDS="-records" otherwise ECMC_GEN_EC_RECORDS="")
epicsEnvSet("ECMC_GEN_EC_RECORDS",          "-records")
# Choose to generate EPICS-records for ax-entries (PosAct, SetPos,..)
# (For records use ECMC_GEN_AX_RECORDS="-records" otherwise ECMC_GEN_AX_RECORDS="")
epicsEnvSet("ECMC_GEN_AX_RECORDS",          "-records")
# suffix for pva enabled scripts, templates and substitutions
ecmcEpicsEnvSetCalcTernary(ECMC_PVA, "0", "Pva","")
# Set EtherCAT frequency (defaults to 1000)
ecmcConfigOrDie "Cfg.SetSampleRate(500)"
OK
epicsEnvSet("ECMC_EC_SAMPLE_RATE" ,   500)
ecmcEpicsEnvSetCalc("ECMC_EC_SAMPLE_RATE_MS" ,1000/500)
# Update records in 10ms (100Hz) for FULL MODE and in EC_RATE for DAQ mode
ecmcEpicsEnvSetCalcTernary(ECMC_SAMPLE_RATE_MS, "'FULL'=='DAQ'","2","10")
epicsEnvSet("ECMC_P_SCRIPT",        "mXsXXX")
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addMaster.cmd",1)
 iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addMaster.cmd", "MASTER_ID=0"
#===============================================================================
# addMaster.cfg
epicsEnvSet("ECMC_EC_MASTER_ID"          "0")
# Claim master
ecmcConfigOrDie "Cfg.EcSetMaster(0)"
OK
epicsEnvSet("ECMC_EC_MASTER_ID" ,0)
epicsEnvSet("ECMC_TMP_DIR",         "/tmp/IOC_TEST/EcMaster_0/")
system "mkdir -p /tmp/IOC_TEST/EcMaster_0/"
epicsEnvSet("ECMC_TMP_DIR",         "/tmp/IOC_TEST/EcMaster_0/")
system "mkdir -p /tmp/IOC_TEST/EcMaster_0/"
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setDiagnostics.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setDiagnostics.cmd
#==============================================================================
# setDiagnostics.cmd
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
OK
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
OK
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
OK
# Load ecmc inforamtion into record
dbLoadRecords("ecmcMcuInfo.db","P=IOC_TEST:,ECMC_VER=master, M_ID=0, ,MCU_NAME=mXsXXX, M_RATE=500, M_TIME=2,PV_TIME=10, MCU_MODE=FULL,MCU_PVA=No")
epicsEnvSet("ECMCCFG_INIT" ,"#")
##############################################################################
## Configure hardware:
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "7")
epicsEnvSet("ECMC_EC_SLAVE_DRIVE_X",        "7")
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=7, HW_DESC=EL7037, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "7")
epicsEnvSet("HW_DESC",            "EL7037")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=7, HW_DESC=EL7037, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "7")
epicsEnvSet("HW_DESC",            "EL7037")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7037")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b7d3052")
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,7,0x2,0x1b7d3052)"
OK
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(7,0x1011,0x1,1684107116,4)"
OK
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(7,0x2,0x1b7d3052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8012,0x5,1,1)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8012,0xA,1,1)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8012,0x8,1,1)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8012,0x9,0,1)"
OK
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=7,HWTYPE=EL7037"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "7","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s007")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s007-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7037.substitutions,ECMC_P=IOC_TEST:m0s007-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7037.substitutions,1,1)
dbLoadTemplate(ecmcEL7037.substitutions,"ECMC_P=IOC_TEST:m0s007-,ECMC_G=IOC_TEST:m0s007,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=7,HWTYPE=EL7037,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s007-,ECMC_G=IOC_TEST:m0s007"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s007-,ECMC_G=IOC_TEST:m0s007,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=7,HWTYPE=EL7037,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
epicsEnvSet(ECMC_EC_CFG,"7, ")
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "7+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x1,1000,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x2,100,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x3,2400,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x4,450,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0x6,200,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(7,0x8010,0xA,750,2)"
OK
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "8")
epicsEnvSet("ECMC_EC_SLAVE_DRIVE_Y",        "8")
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureSlave.cmd, "SLAVE_ID=8, HW_DESC=EL7037, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "8")
epicsEnvSet("HW_DESC",            "EL7037")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd "SLAVE_ID=8, HW_DESC=EL7037, NELM=1"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "8")
epicsEnvSet("HW_DESC",            "EL7037")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7037")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b7d3052")
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd "RESET=true"
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,8,0x2,0x1b7d3052)"
OK
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "true>0","","#- ")
ecmcConfigOrDie "Cfg.EcWriteSdo(8,0x1011,0x1,1684107116,4)"
OK
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX70XX.cmd
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x01,16,encoderControl01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x11,16,encoderValue01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,1,2,0x1602,0x7010,0x1,16,driveControl01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,1,2,0x1604,0x7010,0x21,16,1,velocitySetpoint01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x0,16,encoderStatus01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x11,16,positionActual01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x12,16,encoderLatchPostion01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryComplete(8,0x2,0x1b7d3052,2,3,0x1a03,0x6010,0x1,16,driveStatus01)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0x5,1,1)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0xA,1,1)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0x8,1,1)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8012,0x9,0,1)"
OK
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=8,HWTYPE=EL7037"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "8","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s008")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s008-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL7037.substitutions,ECMC_P=IOC_TEST:m0s008-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL7037.substitutions,1,1)
dbLoadTemplate(ecmcEL7037.substitutions,"ECMC_P=IOC_TEST:m0s008-,ECMC_G=IOC_TEST:m0s008,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=8,HWTYPE=EL7037,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s008-,ECMC_G=IOC_TEST:m0s008"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s008-,ECMC_G=IOC_TEST:m0s008,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=8,HWTYPE=EL7037,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
epicsEnvSet(ECMC_EC_CFG,"7, 8, ")
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "8+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL7037-Motor-Trinamic-QMot-QSH4218-41-10-035.cmd ""
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x1,1000,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x2,100,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x3,2400,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x4,450,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0x6,200,2)"
OK
ecmcConfigOrDie "Cfg.EcAddSdo(8,0x8010,0xA,750,2)"
OK
# EL1104 (empty subst file => no default records loaded)
epicsEnvSet("ECMC_EC_SLAVE_NUM_DI",           "9")
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addSlave.cmd, "SLAVE_ID=9, HW_DESC=EL1104"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "9")
epicsEnvSet("HW_DESC",            "EL1104")
epicsEnvSet("P_SCRIPT",           "mXsXXX")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL1104.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEL1104.cmd" "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1104")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x04503052")
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/slaveVerify.cmd
ecmcEpicsEnvSetCalcTernary(SLAVE_VERIFY, "0==0","","#- ")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,9,0x2,0x04503052)"
OK
ecmcEpicsEnvSetCalcTernary(SLAVE_RESET, "0>0","","#- ")
epicsEnvSet(ECMC_EC_SLAVE_FW, "0x0000")
ecmcEpicsEnvSetCalcTernary(SLAVE_FW, "0>0","","#- ")
epicsEnvUnset(SLAVE_VERIFY)
epicsEnvUnset(SLAVE_RESET)
epicsEnvUnset(SLAVE_FW)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcEX1004.cmd
ecmcConfigOrDie "Cfg.EcAddEntryDT(9,0x2,0x04503052,2,0,0x1a00,0x6000,0x1,B1,binaryInput01)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryDT(9,0x2,0x04503052,2,0,0x1a01,0x6010,0x1,B1,binaryInput02)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryDT(9,0x2,0x04503052,2,0,0x1a02,0x6020,0x1,B1,binaryInput03)"
OK
ecmcConfigOrDie "Cfg.EcAddEntryDT(9,0x2,0x04503052,2,0,0x1a03,0x6030,0x1,B1,binaryInput04)"
OK
# deduce what the prefix should be
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd",1)
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmcmXsXXX.cmd" "MASTER_ID=0,SLAVE_POS=9,HWTYPE=EL1104"
#==============================================================================
# ecmcmXsXXX.cmd
ecmcEpicsEnvSetCalc("sid", "9","%03d")
ecmcEpicsEnvSetCalc("mid", "0","%01d")
epicsEnvSet("ECMC_G",            "IOC_TEST:m0s009")
epicsEnvSet("ECMC_P",            "IOC_TEST:m0s009-")
epicsEnvUnset(sid)
epicsEnvUnset(mid)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SUBS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applySubstitutions.cmd" "SUBST_FILE=ecmcEL1104.substitutions,ECMC_P=IOC_TEST:m0s009-"
#==============================================================================
# applySubstitutions.cmd
ecmcFileExist(ecmcEL1104.substitutions,1,1)
dbLoadTemplate(ecmcEL1104.substitutions,"ECMC_P=IOC_TEST:m0s009-,ECMC_G=IOC_TEST:m0s009,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=9,HWTYPE=EL1104,T_SMP_MS=10,TSE=0,NELM=1")
epicsEnvUnset(DEFAULT_SUBS)
ecmcEpicsEnvSetCalcTernary(DEFAULT_SLAVE_PVS, "True", "","#- ")
iocshLoad "/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyTemplate.cmd" "TEMPLATE_FILE=ecmcEcSlave.template,ECMC_P=IOC_TEST:m0s009-,ECMC_G=IOC_TEST:m0s009"
#==============================================================================
# applyTemplate.cmd
ecmcFileExist(ecmcEcSlave.template,1,1)
dbLoadRecords("ecmcEcSlave.template", "ECMC_P=IOC_TEST:m0s009-,ECMC_G=IOC_TEST:m0s009,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=9,HWTYPE=EL1104,T_SMP_MS=10,TSE=0,")
epicsEnvUnset(DEFAULT_SLAVE_PVS)
epicsEnvSet(ECMC_EC_CFG,"7, 8, 9, ")
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "9+1","%d")
#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"
OK
##############################################################################
## X
#
epicsEnvSet("DEV",      "IOC_TEST")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/x.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/x.ax",1)
iocshLoad ./cfg/x.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "X")
epicsEnvSet("ECMC_R",                     "X-")
epicsEnvSet("ECMC_AXIS_NO",               "1")
epicsEnvSet("ECMC_DESC",                  "X")
epicsEnvSet("ECMC_EGU",                   "mm")                       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE larger than 0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "60")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "12800")
epicsEnvSet("ECMC_ENC_TYPE"               "0")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s7.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                        # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "600.0")                    # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                  # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s7.driveControl01.0")     # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "ec0.s7.driveStatus01.1")      # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s7.velocitySetpoint01") # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s7.driveControl01.2")     # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                         # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                   # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                   # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s7.driveControl01.1")     # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s7.driveStatus01.3")      # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s7.driveStatus01.7")      # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s7.driveStatus01.14")     # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s7.driveStatus01.2")      # Warning
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "1")
epicsEnvSet("ECMC_HOME_POS",              "-90")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "1")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "25.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s9.binaryInput04.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s9.binaryInput03.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s9.ONE.0")               #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s9.ONE.0")               #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "-60")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "60")
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "1")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "200.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(60)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 60...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(60)<>0","# ECMC_ENC_SCALE_NUM value OK == 60...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 60...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(600.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == 600.0...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(600.0)<>0","# ECMC_DRV_SCALE_NUM value OK == 600.0...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == 600.0...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(1,1,0,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.health")"
OK
ecmcConfigOrDie "Cfg.SetAxisModRange(1, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisModType(1, 0)"
OK
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(1,10)"
OK
 ecmcConfigOrDie "Cfg.SetAxisDec(1,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisJerk(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisVel(1,10.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(1,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(1,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(1,4)"
OK
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(1,25.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(1,0.02)"
OK
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(1,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(1,1.0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.positionActual01,"ax1.enc.actpos")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(1,12800)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(1,60)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncType(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncBits(1,16)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncOffset(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(1,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(1,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(1,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.warning")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchpos")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchcontrol")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.enc.latchstatus")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(1,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(1,-1)"
OK
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(1,-1)"
OK
ecmcConfigOrDie "Cfg.SelectAxisEncHome(1,-1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(1,-1)"
OK2023/03/03 13:16:23.254 ecmcMotorRecord:: setIntegerParam(1 motorPowerAutoOnOff_)=2
2023/03/03 13:16:23.254 ecmcMotorRecord:: setDoubleParam(1 motorPowerOnDelay_)=6
2023/03/03 13:16:23.254 ecmcMotorRecord:: setDoubleParam(1 motorPowerOffDelay_=-1
2023/03/03 13:16:23.254 ecmcMotorRecord:: connected(1)
2023/03/03 13:16:23.254 ecmcMotorRecord:: initialPoll(1) status=0

ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(1,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.driveControl01.0,"ax1.drv.control")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.driveStatus01.1,"ax1.drv.status")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.velocitySetpoint01,"ax1.drv.velocity")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.drv.position")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax1.drv.brake")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.driveControl01.2,"ax1.drv.reducetorque")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.driveControl01.1,"ax1.drv.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.driveStatus01.3,"ax1.drv.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.driveStatus01.7,"ax1.drv.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.driveStatus01.14,"ax1.drv.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s7.driveStatus01.2,"ax1.drv.warning")"
OK
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(1,32768.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(1,600.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(1,-60)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(1,60)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(1,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s9.binaryInput04.0,"ax1.mon.lowlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s9.binaryInput03.0,"ax1.mon.highlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s9.ONE.0,"ax1.mon.homesensor")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s9.ONE.0,"ax1.mon.extinterlock")"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(1,0.1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(1,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(1,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(1,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(1,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(1,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(1,200.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(1,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(1,200)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(1,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePosition(1,-90)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(1, 1)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(1, 0)"
OK
 ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "1", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(60)>0){RESULT:=abs(60);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=X, MOTOR_PORT=MCU1, AXIS_NO=1, DESC=X, EGU=mm, PREC=3, VELO=10.0, JVEL=5, JAR=0.0, ACCS=10, RDBD=0.1, DLLM=-60, DHLM=60, HOMEPROC=1,SREV=12800,UREV=60.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=X, MOTOR_PORT=MCU1, AXIS_NO=1,HOMEPROC=1, HOMEPOS=-90, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
# Add ECMC_AXIS_NO to ECMC_AXES_CFG
epicsEnvSet(ECMC_AXES_CFG,"1, " )
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=X,AXIS_NO=1,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=X,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/x.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/x.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")       # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "0")       # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "10")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")       # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "1")       # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "20")      # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",   "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",        "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# axis 1: x physical
# axis 2: y physical
# axis 3: x amplitude
# axis 4: y amplitude
# axis 5: x offset
# axis 6: y offset
# axis 7: freq
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "ax1.traj.setpos:=ax5.traj.setpos+ax3.traj.setpos*sin(2*pi*ax7.traj.setpos*ec_get_time()/1e9)|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "if(ax1.traj.source){ax1.drv.enable:=ax3.drv.enable+ax5.drv.enable+ax7.drv.enable|}|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(1,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(1,1)"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)=ax1.traj.setpos:=ax5.traj.setpos+ax3.traj.setpos*sin(2*pi*ax7.traj.setpos*ec_get_time()/1e9)|"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)=if(ax1.traj.source){ax1.drv.enable:=ax3.drv.enable+ax5.drv.enable+ax7.drv.enable|}|"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(1)="
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(1,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(1,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(1,20)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(1,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(1,0)"
OK
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EX2023/03/03 13:16:23.258 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000012
2023/03/03 13:16:23.258 ecmcMotorRecord:: poll(1) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:23.258 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
PR_LINE_10)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_11)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_12)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_13)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_14)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_15)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_16)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_17)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_18)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_19)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_20)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(1,1)"
OK
##############################################################################
## Y
#
epicsEnvSet("DEV",      "IOC_TEST")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureAxis.cmd, CONFIG=./cfg/y.ax)
#==============================================================================
# configureAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
ecmcFileExist("./cfg/y.ax",1)
iocshLoad ./cfg/y.ax ""
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "Y")
epicsEnvSet("ECMC_R",                     "Y-")
epicsEnvSet("ECMC_AXIS_NO",               "2")
epicsEnvSet("ECMC_DESC",                  "Y")
epicsEnvSet("ECMC_EGU",                   "mm")                       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE larger than 0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
#Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "60")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "12800")
epicsEnvSet("ECMC_ENC_TYPE"               "0")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s8.positionActual01")          # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Drive
epicsEnvSet("ECMC_DRV_TYPE"               "0")                        # Stepper: 0. DS402: 1 (DS402 = servos and advanced stepper drives)
epicsEnvSet("ECMC_DRV_SCALE_NUM"          "600.0")                    # Fastest speed in engineering units
epicsEnvSet("ECMC_DRV_SCALE_DENOM"        "32768.0")                  # I/O range for ECMC_EC_ALIAS_DRV_VELO_SET
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "ec0.s8.driveControl01.0")     # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_y.ax line 77: Unbalanced quote.
EC_DRV_STATUS",         "ec0.s8.driveStatus01.1")      # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "ec0.s8.velocitySetpoint01") # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "ec0.s8.driveControl01.2")     # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "")                         # Ethercat entry for brake output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "0")                   # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "0")                   # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_EC_DRV_RESET",          "ec0.s8.driveControl01.1")     # Reset
epicsEnvSet("ECMC_EC_DRV_ALARM_0",        "ec0.s8.driveStatus01.3")      # Error
epicsEnvSet("ECMC_EC_DRV_ALARM_1",        "ec0.s8.driveStatus01.7")      # Stall
epicsEnvSet("ECMC_EC_DRV_ALARM_2",        "ec0.s8.driveStatus01.14")     # Sync error
epicsEnvSet("ECMC_EC_DRV_WARNING",        "ec0.s8.driveStatus01.2")      # Warning
#Trajectory
epicsEnvSet("ECMC_VELO",                  "10.0")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "10")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "1")
epicsEnvSet("ECMC_HOME_POS",              "-90")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "1")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Controller
epicsEnvSet("ECMC_CNTRL_KP",              "15.0")
epicsEnvSet("ECMC_CNTRL_KI",              "0.02")
epicsEnvSet("ECMC_CNTRL_KD",              "0.0")
epicsEnvSet("ECMC_CNTRL_KFF",             "1.0")
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s9.binaryInput02.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s9.binaryInput01.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s9.ONE.0")               #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s9.ONE.0")               #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "-60")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "60)
epicsEnvSet("ECMC_DXLM_ENABLE",           "0")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "1")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "10")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "1")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",    "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "200.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addAxis.cmd
#==============================================================================
# addAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis-records.cmd
#==============================================================================
# ecmc_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis.cmd
#==============================================================================
# ecmc_axis.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(60)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 60...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(60)<>0","# ECMC_ENC_SCALE_NUM value OK == 60...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 60...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(12800)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 12800...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(12800)<>0","# ECMC_ENC_SCALE_DENOM value OK == 12800...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 12800...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(600.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_NUM value OK == 600.0...',ERROR_STR='ECMC_DRV_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(600.0)<>0","# ECMC_DRV_SCALE_NUM value OK == 600.0...", "ecmcExit Error: ECMC_DRV_SCALE_NUM == 0...")
# ECMC_DRV_SCALE_NUM value OK == 600.0...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(32768.0)<>0',SUCCESS_STR='ECMC_DRV_SCALE_DENOM value OK == 32768.0...',ERROR_STR='ECMC_DRV_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(32768.0)<>0","# ECMC_DRV_SCALE_DENOM value OK == 32768.0...", "ecmcExit Error: ECMC_DRV_SCALE_DENOM == 0...")
# ECMC_DRV_SCALE_DENOM value OK == 32768.0...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(2,1,0,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.health")"
OK
ecmcConfigOrDie "Cfg.SetAxisModRange(2, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisModType(2, 0)"
OK
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(2,10)"
OK
 ecmcConfigOrDie "Cfg.SmacLib: macro ECMC_SOFT_HIGH_LIM is undefined (expanding string ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(${ECMC_AXIS_NO},${ECMC_SOFT_HIGH_LIM})")
etAxisDec(2,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisJerk(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisVel(2,10.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(2,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(2,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(2,4)"
OK
ecmcConfigOrDie "Cfg.SetAxisCntrlKp(2,15.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisCntrlKi(2,0.02)"
OK
ecmcConfigOrDie "Cfg.SetAxisCntrlKd(2,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisCntrlKff(2,1.0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.positionActual01,"ax2.enc.actpos")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(2,12800)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(2,60)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncType(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncBits(2,16)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncOffset(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(2,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(2,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(2,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.warning")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchpos")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchcontrol")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.enc.latchstatus")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncHomeLatchCountOffset(2,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncRefToOtherEncAtStartup(2,-1)"
OK
ecmcConfigOrDie "Cfg.SelectAxisEncPrimary(2,-1)"
OK
ecmcConfigOrDie "Cfg.SelectAxisEncHome(2,-1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncEnableRefAtHome(2,-1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncMaxDiffToPrimEnc(2,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.driveControl01.0,"ax2.drv.control")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.driveStatus01.1,"ax2.drv.status")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.velocitySetpoint01,"ax2.drv.velocity")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.drv.position")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax2.drv.brake")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.driveControl01.2,"ax2.drv.reducetorque")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.driveControl01.1,"ax2.drv.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.driveStatus01.3,"ax2.drv.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.driveStatus01.7,"ax2.drv.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.driveStatus01.14,"ax2.drv.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s8.driveStatus01.2,"ax2.drv.warning")"
OK
ecmcConfigOrDie "Cfg.SetAxisDrvScaleDenom(2,32768.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisDrvScaleNum(2,600.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeOpenDelayTime(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisDrvBrakeCloseAheadTime(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(2,-60)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(2,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s9.binaryInput02.0,"ax2.mon.lowlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s9.binaryInput01.0,"ax2.mon.highlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s9.ONE.0,"ax2.mon.homesensor")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s9.ONE.0,"ax2.mon.extinterlock")"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(2,0.1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(2,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(2,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(2,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(2,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(2,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(2,200.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(2,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(2,200)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(2,100)"
OK
ecmcConfigOrDie "Cfg.SetAxis2023/03/03 13:16:23.263 ecmcMotorRecord:: setIntegerParam(2 motorPowerAutoOnOff_)=2
2023/03/03 13:16:23.263 ecmcMotorRecord:: setDoubleParam(2 motorPowerOnDelay_)=6
2023/03/03 13:16:23.263 ecmcMotorRecord:: setDoubleParam(2 motorPowerOffDelay_=-1
2023/03/03 13:16:23.263 ecmcMotorRecord:: connected(2)
2023/03/03 13:16:23.263 ecmcMotorRecord:: initialPoll(2) status=0
macLib: macro ECMC_SOFT_HIGH_LIM is undefined (expanding string ${ECMC_BLOCK_ACCL} dbLoadRecords(${ECMC_MR_MODULE="ecmcMotorRecord${ECMC_PVA}"}.template, "PREFIX=${ECMC_PREFIX}, MOTOR_NAME=${ECMC_MOTOR_NAME}, MOTOR_PORT=${ECMC_MOTOR_PORT}, AXIS_NO=${ECMC_AXIS_NO}, DESC=${ECMC_DESC}, EGU=${ECMC_EGU}, PREC=${ECMC_PREC}, VELO=${ECMC_VELO}, JVEL=${ECMC_JOG_VEL}, JAR=${ECMC_JAR}, ACCL=${ECMC_ACCL=0}, RDBD=${ECMC_MON_AT_TARGET_TOL}, DLLM=${ECMC_SOFT_LOW_LIM}, DHLM=${ECMC_SOFT_HIGH_LIM}, HOMEPROC=${ECMC_HOME_PROC},SREV=${ECMC_TEMP_SREV},UREV=${ECMC_TEMP_UREV}, ${ECMC_AXISFIELDINIT=""}"))
macLib: macro ECMC_SOFT_HIGH_LIM is undefined (expanding string ${ECMC_BLOCK_ACCS} dbLoadRecords(${ECMC_MR_MODULE="ecmcMotorRecord${ECMC_PVA}"}.template, "PREFIX=${ECMC_PREFIX}, MOTOR_NAME=${ECMC_MOTOR_NAME}, MOTOR_PORT=${ECMC_MOTOR_PORT}, AXIS_NO=${ECMC_AXIS_NO}, DESC=${ECMC_DESC}, EGU=${ECMC_EGU}, PREC=${ECMC_PREC}, VELO=${ECMC_VELO}, JVEL=${ECMC_JOG_VEL}, JAR=${ECMC_JAR}, ACCS=${ECMC_ACCS_EGU_PER_S2=0}, RDBD=${ECMC_MON_AT_TARGET_TOL}, DLLM=${ECMC_SOFT_LOW_LIM}, DHLM=${ECMC_SOFT_HIGH_LIM}, HOMEPROC=${ECMC_HOME_PROC},SREV=${ECMC_TEMP_SREV},UREV=${ECMC_TEMP_UREV}, ${ECMC_AXISFIELDINIT=""}"))
MonHomeSwitchPolarity(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePosition(2,-90)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(2, 1)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(2, 0)"
OK
 ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "2", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(12800)>0){RESULT:=abs(12800);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(60)>0){RESULT:=abs(60);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=Y, MOTOR_PORT=MCU1, AXIS_NO=2,HOMEPROC=1, HOMEPOS=-90, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
# Add ECMC_AXIS_NO to ECMC_AXES_CFG
epicsEnvSet(ECMC_AXES_CFG,"1, 2, " )
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=Y,AXIS_NO=2,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=Y,AXIS_TYPE=1,DRV_TYPE=0,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_unset.cmd
#==============================================================================
# ecmc_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_CNTRL_KP)
epicsEnvUnset(ECMC_CNTRL_KI)
epicsEnvUnset(ECMC_CNTRL_KD)
epicsEnvUnset(ECMC_CNTRL_KFF)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCHPOS)
epicsEnvUnset(ECMC_EC_ENC_LATCH_CONTROL)
epicsEnvUnset(ECMC_EC_ENC_LATCH_STATUS)
epicsEnvUnset(ECMC_HOME_LATCH_COUNT_OFFSET)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_ENC_REF_TO_ENC_AT_STARTUP_ID)
epicsEnvUnset(ECMC_ENC_HOME_ID)
epicsEnvUnset(ECMC_ENC_PRIMARY_ID)
epicsEnvUnset(ECMC_ENC_CFG_ID)
epicsEnvUnset(ECMC_ENC_MAX_DIFF_TO_PRIM_ENC)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_DRV_CONTROL)
epicsEnvUnset(ECMC_EC_DRV_STATUS)
epicsEnvUnset(ECMC_EC_DRV_VELOCITY)
epicsEnvUnset(ECMC_EC_DRV_BRAKE)
epicsEnvUnset(ECMC_EC_DRV_REDUCE_TORQUE)
epicsEnvUnset(ECMC_EC_DRV_RESET)
epicsEnvUnset(ECMC_EC_DRV_ALARM_0)
epicsEnvUnset(ECMC_EC_DRV_ALARM_1)
epicsEnvUnset(ECMC_EC_DRV_ALARM_2)
epicsEnvUnset(ECMC_EC_DRV_WARNING)
epicsEnvUnset(ECMC_DRV_SCALE_DENOM)
epicsEnvUnset(ECMC_DRV_SCALE_NUM)
epicsEnvUnset(ECMC_DRV_BRAKE_OPEN_DLY_TIME)
epicsEnvUnset(ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_DXLM_ENABLE)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/y.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/y.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "0")       # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "0")       # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "10")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")       # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "1")       # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "20")      # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",   "1")       # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",        "1")       # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
# axis 1: x physical
# axis 2: y physical
# axis 3: x amplitude
# axis 4: y amplitude
# axis 5: x offset
# axis 6: y offset
# axis 7: freq
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "ax2.traj.setpos:=ax6.traj.setpos+ax4.traj.setpos*cos(2*pi*ax7.traj.setpos*ec_get_time()/1e9)|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "if(ax2.traj.source){ax2.drv.enable:=ax4.drv.enable+ax4.drv.enable+ax7.drv.enable|}|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(2,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(2,1)"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)=ax2.traj.setpos:=ax6.traj.setpos+ax4.traj.setpos*cos(2*pi*ax7.traj.setpos*ec_get_time()/1e9)|"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)=if(ax2.traj.source){ax2.drv.enable:=ax4.drv.enable+ax4.drv.enable+ax7.drv.enable|}|"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(2)="
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(2,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(2,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(2,20)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(2,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(2,0)"
OK
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_11)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_12)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_13)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_14)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_15)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_16)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_17)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_18)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_19)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_20)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
ecmcConfigOrDie "Cfg.SetAxisAllowSourceChangeWhenEnabled(2,1)"
OK
##############################################################################
## X amplitude
#
epicsEnvSet("DEV",      "IOC_TEST")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/amplitude_x.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/amplitude_x.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "amplitudeX")
epicsEnvSet("ECMC_R",                     "amplitudeX-")
epicsEnvSet("ECMC_AXIS_NO",               "3")
epicsEnvSet("ECMC_DESC",                  "Amplitude X")
epicsEnvSet("ECMC_EGU",                   "mm")                       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE> larger than: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
# Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")              # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "0.3")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "-70")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "70")
epicsEnvSet("ECMC_DXLM_ENABLE",           "1")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(3,2,0,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(3,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.health")"
OK
ecmcConfigOrDie "Cfg.SetAxisModRange(3, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisModType(3, 0)"
OK
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(3,0.3)"
OK
 ecmcConfigOrDie "Cfg.SetAxisDec(3,0.3)"
OK
ecmcConfigOrDie "Cfg.SetAxisJerk(3,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisVel(3,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(3,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(3,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(3,4)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax3.enc.actpos")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncType(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncBits(3,16)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(3,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncOffset(3,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(3,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(3,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.warning")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchpos")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax3.enc.latchcontrol")"
OK
ecmcConfigOrDie "Cfg.LinkE2023/03/03 13:16:23.271 ecmcMotorRecord:: setIntegerParam(3 motorPowerAutoOnOff_)=2
2023/03/03 13:16:23.271 ecmcMotorRecord:: setDoubleParam(3 motorPowerOnDelay_)=6
2023/03/03 13:16:23.271 ecmcMotorRecord:: setDoubleParam(3 motorPowerOffDelay_=-1
2023/03/03 13:16:23.271 ecmcMotorRecord:: udateMotorLimitsRO(3) enabledHighAndLow=1 valid=1 fValueHigh=70 fValueLow=-70
2023/03/03 13:16:23.271 ecmcMotorRecord:: connected(3)
2023/03/03 13:16:23.271 ecmcMotorRecord:: initialPoll(3) status=0
cEntryToObject(,"ax3.enc.latchstatus")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.lowlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.highlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.homesensor")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax3.mon.extinterlock")"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(3,0.1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(3,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(3,0.5)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(3,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(3,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(3,100.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(3,200)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(3,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(3,-70)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(3,70)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(3,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(3,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
OK
ecmcConfigOrDie "Cfg.SetAxisHomePosition(3,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(3, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(3, 0)"
OK
 ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "3", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=amplitudeX, MOTOR_PORT=MCU1, AXIS_NO=3, DESC=Amplitude X, EGU=mm, PREC=3, VELO=5, JVEL=5, JAR=0.0, ACCS=0.3, RDBD=0.1, DLLM=-70, DHLM=70, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=amplitudeX, MOTOR_PORT=MCU1, AXIS_NO=3,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
# Add ECMC_AXIS_NO to ECMC_AXES_CFG
epicsEnvSet(ECMC_AXES_CFG,"1, 2, 3, ")
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=amplitudeX,AXIS_NO=3,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=amplitudeX,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/amplitude_x.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/amplitude_x.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "0")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "10")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",   "1")      # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",        "1")      # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "ax3.enc.actpos:=ax3.traj.setpos|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(3,1)"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)=ax3.enc.actpos:=ax3.traj.setpos|"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(3)="
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(3,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(3,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(3,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(3,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(3,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(3,0)"
OK
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_11)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_12)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_13)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_14)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_15)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_16)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_17)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_18)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_19)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_20)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## Y amplitude
#
epicsEnvSet("DEV",      "IOC_TEST")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/amplitude_y.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/amplitude_y.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "amplitudeY")
epicsEnvSet("ECMC_R",                     "amplitudeY-")
epicsEnvSet("ECMC_AXIS_NO",               "4")
epicsEnvSet("ECMC_DESC",                  "Amplitude Y")
epicsEnvSet("ECMC_EGU",                   "mm")                       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE larger than 0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
# Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")              # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "0.3")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "-70")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "70")
epicsEnvSet("ECMC_DXLM_ENABLE",           "1")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(4,2,0,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(4,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.health")"
OK
ecmcConfigOrDie "Cfg.SetAxisModRange(4, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisModType(4, 0)"
OK
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(4,0.3)"
OK
 ecmcConfigOrDie "Cfg.SetAxisDec(4,0.3)"
OK
ecmcConfigOrDie "Cfg.SetAxisJerk(4,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisVel(4,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(4,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(4,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(4,4)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax4.enc.actpos")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncType(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncBits(4,16)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(4,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncOffset(4,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(4,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(4,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.warning")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchpos")"2023/03/03 13:16:23.288 ecmcMotorRecord:: setIntegerParam(4 motorPowerAutoOnOff_)=2
2023/03/03 13:16:23.288 ecmcMotorRecord:: setDoubleParam(4 motorPowerOnDelay_)=6
2023/03/03 13:16:23.288 ecmcMotorRecord:: setDoubleParam(4 motorPowerOffDelay_=-1
2023/03/03 13:16:23.288 ecmcMotorRecord:: udateMotorLimitsRO(4) enabledHighAndLow=1 valid=1 fValueHigh=70 fValueLow=-70
2023/03/03 13:16:23.289 ecmcMotorRecord:: connected(4)
2023/03/03 13:16:23.289 ecmcMotorRecord:: initialPoll(4) status=0

OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchcontrol")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax4.enc.latchstatus")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax4.mon.lowlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax4.mon.highlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax4.mon.homesensor")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax4.mon.extinterlock")"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(4,0.1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(4,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(4,0.5)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(4,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(4,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(4,100.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(4,200)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(4,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(4,-70)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(4,70)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(4,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(4,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
OK
ecmcConfigOrDie "Cfg.SetAxisHomePosition(4,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(4, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(4, 0)"
OK
 ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "4", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=amplitudeY, MOTOR_PORT=MCU1, AXIS_NO=4, DESC=Amplitude Y, EGU=mm, PREC=3, VELO=5, JVEL=5, JAR=0.0, ACCS=0.3, RDBD=0.1, DLLM=-70, DHLM=70, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=amplitudeY, MOTOR_PORT=MCU1, AXIS_NO=4,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
# Add ECMC_AXIS_NO to ECMC_AXES_CFG
epicsEnvSet(ECMC_AXES_CFG,"1, 2, 3, 4, ")
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=amplitudeY,AXIS_NO=4,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=amplitudeY,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/amplitude_y.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/amplitude_y.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "0")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "10")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",   "1")      # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",        "1")      # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "ax4.enc.actpos:=ax4.traj.setpos|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(4,1)"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)=ax4.enc.actpos:=ax4.traj.setpos|"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(4)="
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(4,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(4,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(4,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(4,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(4,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(4,0)"
OK
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_11)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_12)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_13)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_14)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_15)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_16)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_17)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_18)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_19)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_20)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## X offset
#
epicsEnvSet("DEV",      "IOC_TEST")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/offset_x.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/offset_x.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "offsetX")
epicsEnvSet("ECMC_R",                     "offsetX-")
epicsEnvSet("ECMC_AXIS_NO",               "5")
epicsEnvSet("ECMC_DESC",                  "Offset X")
epicsEnvSet("ECMC_EGU",                   "mm")                       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE larger than 0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
# Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")              # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "0.3")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "-70")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "70")
epicsEnvSet("ECMC_DXLM_ENABLE",           "1")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(5,2,0,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(5,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.health")"
OK
ecmcConfigOrDie "Cfg.SetAxisModRange(5, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisModType(5, 0)"
OK
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(5,0.3)"
OK
 ecmcConfigOrDie "Cfg.SetAxisDec(5,0.3)"
OK
ecmcConfigOrDie "Cfg.SetAxisJerk(5,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisVel(5,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(5,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(5,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(5,4)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax5.enc.actpos")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncType(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncBits(5,16)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(5,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncOffset(5,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(5,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(5,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,2023/03/03 13:16:23.310 ecmcMotorRecord:: setIntegerParam(5 motorPowerAutoOnOff_)=2
2023/03/03 13:16:23.310 ecmcMotorRecord:: setDoubleParam(5 motorPowerOnDelay_)=6
2023/03/03 13:16:23.311 ecmcMotorRecord:: setDoubleParam(5 motorPowerOffDelay_=-1
2023/03/03 13:16:23.311 ecmcMotorRecord:: udateMotorLimitsRO(5) enabledHighAndLow=1 valid=1 fValueHigh=70 fValueLow=-70
2023/03/03 13:16:23.311 ecmcMotorRecord:: connected(5)
2023/03/03 13:16:23.311 ecmcMotorRecord:: initialPoll(5) status=0
"ax5.enc.warning")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchpos")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchcontrol")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax5.enc.latchstatus")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.lowlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.highlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.homesensor")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax5.mon.extinterlock")"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(5,0.1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(5,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(5,0.5)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(5,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(5,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(5,100.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(5,200)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(5,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(5,-70)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(5,70)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(5,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(5,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
OK
ecmcConfigOrDie "Cfg.SetAxisHomePosition(5,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(5, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(5, 0)"
OK
 ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "5", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=offsetX, MOTOR_PORT=MCU1, AXIS_NO=5, DESC=Offset X, EGU=mm, PREC=3, VELO=5, JVEL=5, JAR=0.0, ACCS=0.3, RDBD=0.1, DLLM=-70, DHLM=70, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=offsetX, MOTOR_PORT=MCU1, AXIS_NO=5,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
# Add ECMC_AXIS_NO to ECMC_AXES_CFG
epicsEnvSet(ECMC_AXES_CFG,"1, 2, 3, 4, 5, ")
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=offsetX,AXIS_NO=5,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=offsetX,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/offset_x.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/offset_x.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "0")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "10")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",   "1")      # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",        "1")      # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "ax5.enc.actpos:=ax5.traj.setpos|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(5,1)"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)=ax5.enc.actpos:=ax5.traj.setpos|"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(5)="
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(5,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(5,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(5,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(5,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(5,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(5,0)"
OK
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_11)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_12)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_13)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_14)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_15)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_16)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_17)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_18)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_19)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_20)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## Y offset
#
epicsEnvSet("DEV",      "IOC_TEST")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/offset_y.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/offset_y.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "offsetY")
epicsEnvSet("ECMC_R",                     "offsetY-")
epicsEnvSet("ECMC_AXIS_NO",               "6")
epicsEnvSet("ECMC_DESC",                  "Offset Y")
epicsEnvSet("ECMC_EGU",                   "mm")                       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE larger than 0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
# Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")              # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "5")
epicsEnvSet("ECMC_JOG_VEL",               "5")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "0.3")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "-70")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "70")
epicsEnvSet("ECMC_DXLM_ENABLE",           "1")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(6,2,0,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(6,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.health")"
OK
ecmcConfigOrDie "Cfg.SetAxisModRange(6, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisModType(6, 0)"
OK
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(6,0.3)"
OK
 ecmcConfigOrDie "Cfg.SetAxisDec(6,0.3)"
OK
ecmcConfigOrDie "Cfg.SetAxisJerk(6,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisVel(6,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(6,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(6,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(6,4)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax6.enc.actpos")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncType(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncBits(6,16)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(6,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncOffset(6,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(6,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(6,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObjec2023/03/03 13:16:23.326 ecmcMotorRecord:: setIntegerParam(6 motorPowerAutoOnOff_)=2
2023/03/03 13:16:23.326 ecmcMotorRecord:: setDoubleParam(6 motorPowerOnDelay_)=6
2023/03/03 13:16:23.326 ecmcMotorRecord:: setDoubleParam(6 motorPowerOffDelay_=-1
2023/03/03 13:16:23.326 ecmcMotorRecord:: udateMotorLimitsRO(6) enabledHighAndLow=1 valid=1 fValueHigh=70 fValueLow=-70
2023/03/03 13:16:23.326 ecmcMotorRecord:: connected(6)
2023/03/03 13:16:23.326 ecmcMotorRecord:: initialPoll(6) status=0
t(,"ax6.enc.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.warning")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchpos")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchcontrol")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax6.enc.latchstatus")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax6.mon.lowlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax6.mon.highlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax6.mon.homesensor")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax6.mon.extinterlock")"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(6,0.1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(6,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(6,0.5)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(6,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(6,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(6,100.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(6,200)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(6,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(6,-70)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(6,70)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(6,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(6,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
OK
ecmcConfigOrDie "Cfg.SetAxisHomePosition(6,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(6, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(6, 0)"
OK
 ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "6", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=offsetY, MOTOR_PORT=MCU1, AXIS_NO=6, DESC=Offset Y, EGU=mm, PREC=3, VELO=5, JVEL=5, JAR=0.0, ACCS=0.3, RDBD=0.1, DLLM=-70, DHLM=70, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=offsetY, MOTOR_PORT=MCU1, AXIS_NO=6,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
# Add ECMC_AXIS_NO to ECMC_AXES_CFG
epicsEnvSet(ECMC_AXES_CFG,"1, 2, 3, 4, 5, 6, ")
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=offsetY,AXIS_NO=6,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=offsetY,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/offset_y.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/offset_y.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "0")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "10")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",   "1")      # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",        "1")      # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "ax6.enc.actpos:=ax6.traj.setpos|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(6,1)"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)=ax6.enc.actpos:=ax6.traj.setpos|"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(6)="
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(6,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(6,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(6,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(6,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(6,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(6,0)"
OK
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_11)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_12)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_13)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_14)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_15)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_16)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_17)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_18)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_19)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_20)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## freq scaling
#
epicsEnvSet("DEV",      "IOC_TEST")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/configureVirtualAxis.cmd, CONFIG=./cfg/freq.vax)
#==============================================================================
# configureVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad ./cfg/freq.vax
#General
epicsEnvSet("ECMC_MOTOR_NAME",            "freq")
epicsEnvSet("ECMC_R",                     "freq-")
epicsEnvSet("ECMC_AXIS_NO",               "7")
epicsEnvSet("ECMC_DESC",                  "freq scaling")
epicsEnvSet("ECMC_EGU",                   "Hz")                       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "3")                        # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "")                         # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "")                         # Entry for axis health output (example: ec0.s1.binaryOutput01.0)
epicsEnvSet("ECMC_MOD_RANGE" ,            "0")                        # Modulo range (traj setpoints and encoder values will be in range 0..ECMC_MOD_RANGE)
epicsEnvSet("ECMC_MOD_TYPE",              "0")                        # For positioning and MOD_RANGE larger than 0: 0 = Normal, 1 = Always Fwd, 2 = Always Bwd, 3 = Closest Distance
# Encoder
epicsEnvSet("ECMC_ENC_SCALE_NUM"          "1")
epicsEnvSet("ECMC_ENC_SCALE_DENOM"        "1")
epicsEnvSet("ECMC_ENC_TYPE"               "1")                        # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_ENC_BITS"               "16")                       # Total bit count of encoder raw data
epicsEnvSet("ECMC_ENC_ABS_BITS",          "0")                        # Absolute bit count (for absolute encoders) always least significant part of ECMC_ENC_BITS
epicsEnvSet("ECMC_ENC_ABS_OFFSET"         "0.5")                        # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "ec0.s-1.ZERO")              # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_EC_ENC_RESET",          "")                         # Reset   (if no encoder reset bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_0",        "")                         # Error 0 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_1",        "")                         # Error 1 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_ALARM_2",        "")                         # Error 2 (if no encoder error bit then leave empty)
epicsEnvSet("ECMC_EC_ENC_WARNING",        "")                         # Warning (if no encoder warning bit then leave empty)
#Trajectory
epicsEnvSet("ECMC_VELO",                  "0.1")
epicsEnvSet("ECMC_JOG_VEL",               "0.1")
epicsEnvSet("ECMC_JAR",                   "0.0")                      # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCS_EGU_PER_S2",       "0.01")
epicsEnvSet("ECMC_EMERG_DECEL",           "100")             # Emergency deceleration
#Homing
epicsEnvSet("ECMC_HOME_PROC",             "3")
epicsEnvSet("ECMC_HOME_POS",              "0.0")
epicsEnvSet("ECMC_HOME_VEL_TO",           "5")
epicsEnvSet("ECMC_HOME_VEL_FRM",          "4")
epicsEnvSet("ECMC_HOME_ACC",              "21")
epicsEnvSet("ECMC_HOME_DEC",              "100")
epicsEnvSet("ECMC_HOME_POS_MOVE_ENA",     "0")                        # Enable move to position after successfull homing 
epicsEnvSet("ECMC_HOME_POS_MOVE_TARG_POS","0")                        # Target position to go to after successfull homing
#Monitoring
# Switches
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "ec0.s-1.ONE.0")           #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "ec0.s-1.ONE.0")           #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "ec0.s-1.ONE.0")           #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "ec0.s-1.ONE.0")           #  Ethercat entry for external interlock input
# Softlimits (disable with 0,0)
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "-10")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "10")
epicsEnvSet("ECMC_DXLM_ENABLE",           "1")
# Position lag
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "0.5")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "100")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "0")
# At target
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "0.1")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",     "100")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "1")
# Velocity
epicsEnvSet("ECMC_MON_VELO_MAX",          "100.0")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","100")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "200")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "1")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/addVirtualAxis.cmd
#==============================================================================
# addVirtualAxis.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis-records.cmd
#==============================================================================
# ecmc_virt_axis-records.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd",1)
iocshLoad( /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis.cmd )
#==============================================================================
# ecmc_virt_axis.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_NUM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_NUM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_NUM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_NUM == 0...")
# ECMC_ENC_SCALE_NUM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/verifyOrDie.cmd "EXPR_STR='abs(1)<>0',SUCCESS_STR='ECMC_ENC_SCALE_DENOM value OK == 1...',ERROR_STR='ECMC_ENC_SCALE_DENOM == 0...'"
#==============================================================================
# verifyOrDie.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"abs(1)<>0","# ECMC_ENC_SCALE_DENOM value OK == 1...", "ecmcExit Error: ECMC_ENC_SCALE_DENOM == 0...")
# ECMC_ENC_SCALE_DENOM value OK == 1...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_MRES setting is deprecated and will not be used. (MRES will be calulated instead: ECMC_ENC_SCALE_NUM/ECMC_ENC_SCALE_DENOM).. '"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.CreateAxis(7,2,0,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajStartPos(7,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.health")"
OK
ecmcConfigOrDie "Cfg.SetAxisModRange(7, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisModType(7, 0)"
OK
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/issueWarning.cmd "EXPR_STR='-1>0',WARNING_STR='WARNING: ECMC_ACCL setting is deprecated. Please use ECMC_ACCS_EGU_PER_S2 instead..'"
#==============================================================================
# issueWarning.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD,"-1>0","", "#-")
epicsEnvUnset(ECMC_EXE_CMD)
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCL,"'EMPTY'!='EMPTY'","", "#-")
ecmcEpicsEnvSetCalcTernary(ECMC_BLOCK_ACCS,"'EMPTY'=='EMPTY'","", "#-")
 ecmcConfigOrDie "Cfg.SetAxisAcc(7,0.01)"
OK
 ecmcConfigOrDie "Cfg.SetAxisDec(7,0.01)"
OK
ecmcConfigOrDie "Cfg.SetAxisJerk(7,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisVel(7,0.1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEmergDeceleration(7,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelTowardsCam(7,5)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeVelOffCam(7,4)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ZERO,"ax7.enc.actpos")"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleDenom(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncScaleNum(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncType(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncBits(7,16)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncAbsBits(7,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncOffset(7,0.5)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncVelFilterSize(7,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterSize(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncPosFilterEnable(7,0)"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.reset")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.alarm0")"
OK
ecmcConfigOrDie "Cfg.LinkE2023/03/03 13:16:23.336 ecmcMotorRecord:: setIntegerParam(7 motorPowerAutoOnOff_)=2
2023/03/03 13:16:23.336 ecmcMotorRecord:: setDoubleParam(7 motorPowerOnDelay_)=6
2023/03/03 13:16:23.336 ecmcMotorRecord:: setDoubleParam(7 motorPowerOffDelay_=-1
2023/03/03 13:16:23.336 ecmcMotorRecord:: udateMotorLimitsRO(7) enabledHighAndLow=1 valid=1 fValueHigh=10 fValueLow=-10
2023/03/03 13:16:23.336 ecmcMotorRecord:: connected(7)
2023/03/03 13:16:23.336 ecmcMotorRecord:: initialPoll(7) status=0
cEntryToObject(,"ax7.enc.alarm1")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.alarm2")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.warning")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchpos")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchcontrol")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(,"ax7.enc.latchstatus")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax7.mon.lowlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax7.mon.highlim")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax7.mon.homesensor")"
OK
ecmcConfigOrDie "Cfg.LinkEcEntryToObject(ec0.s-1.ONE.0,"ax7.mon.extinterlock")"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTol(7,0.1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonAtTargetTime(7,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableAtTargetMon(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTol(7,0.5)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonPosLagTime(7,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableLagMon(7,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVel(7,100.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonEnableMaxVel(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelDriveILDelay(7,200)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonMaxVelTrajILDelay(7,100)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosBwd(7,-10)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitBwd(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisSoftLimitPosFwd(7,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisEnableSoftLimitFwd(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity(7,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomeLatchCountOffset(7,0.0)"
WARNING: The command Cfg.SetAxisHomeLatchCountOffset() will be obsolete in newer versions.Please use Cfg.SetAxisEncHomeLatchCountOffset() instead.
OK
ecmcConfigOrDie "Cfg.SetAxisHomePosition(7,0.0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveEnable(7, 0)"
OK
ecmcConfigOrDie "Cfg.SetAxisHomePostMoveTargetPosition(7, 0)"
OK
 ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd",1)
 iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_mr.cmd
#==============================================================================
# ecmc_axis_mr.cmd
ecmcMotorRecordCreateAxis(MCU1, "7", "6", )
ecmcEpicsEnvSetCalc("ECMC_TEMP_SREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%d")
ecmcEpicsEnvSetCalc("ECMC_TEMP_UREV","if(abs(1)>0){RESULT:=abs(1);} else {RESULT:=1.0};","%lf")
ecmcFileExist(ecmcMotorRecord.template,1,1)
 dbLoadRecords(ecmcMotorRecord.template, "PREFIX=IOC_TEST:, MOTOR_NAME=freq, MOTOR_PORT=MCU1, AXIS_NO=7, DESC=freq scaling, EGU=Hz, PREC=3, VELO=0.1, JVEL=0.1, JAR=0.0, ACCS=0.01, RDBD=0.1, DLLM=-10, DHLM=10, HOMEPROC=3,SREV=1,UREV=1.000000, ")
epicsEnvSet("ECMC_AXISFIELDINIT",  "")
ecmcFileExist(ecmcMotorRecordhome.template,1,1)
dbLoadRecords(ecmcMotorRecordhome.template, "PREFIX=IOC_TEST:, MOTOR_NAME=freq, MOTOR_PORT=MCU1, AXIS_NO=7,HOMEPROC=3, HOMEPOS=0.0, HVELTO=5, HVELFRM=4, HOMEACC=21, HOMEDEC=100")
epicsEnvUnset(ECMC_TEMP_SREV)
epicsEnvUnset(ECMC_TEMP_UREV)
# Add ECMC_AXIS_NO to ECMC_AXES_CFG
epicsEnvSet(ECMC_AXES_CFG,"1, 2, 3, 4, 5, 6, 7, ")
epicsEnvUnset(ECMC_BLOCK_ACCL)
epicsEnvUnset(ECMC_BLOCK_ACCS)
ecmcFileExist("ecmcAxis.db",1,1)
dbLoadRecords("ecmcAxis.db","P=IOC_TEST:,AXIS_NAME=freq,AXIS_NO=7,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0")
ecmcFileExist("ecmcAxisType.db",1,1)
dbLoadRecords("ecmcAxisType.db","P=IOC_TEST:,AXIS_NAME=freq,AXIS_TYPE=2,DRV_TYPE=2,TRAJ_TYPE=0")
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_virt_axis_unset.cmd
#==============================================================================
# ecmc_virt_axis_unset.cmd
epicsEnvUnset(ECMC_AXISCONFIG)
epicsEnvUnset(ECMC_AXISFIELDINIT)
epicsEnvUnset(ECMC_PREC)
epicsEnvUnset(ECMC_EGU)
epicsEnvUnset(ECMC_DESC)
epicsEnvUnset(ECMC_R)
epicsEnvUnset(ECMC_MOTOR_NAME)
epicsEnvUnset(ECMC_EC_AXIS_HEALTH)
epicsEnvUnset(ECMC_MOD_RANGE)
epicsEnvUnset(ECMC_MOD_TYPE)
epicsEnvUnset(ECMC_EMERG_DECEL)
epicsEnvUnset(ECMC_ACCL)
epicsEnvUnset(ECMC_ACCS_EGU_PER_S2)
epicsEnvUnset(ECMC_HOME_VEL_TO)
epicsEnvUnset(ECMC_HOME_VEL_FRM)
epicsEnvUnset(ECMC_EC_ENC_ACTPOS)
epicsEnvUnset(ECMC_ENC_SCALE_DENOM)
epicsEnvUnset(ECMC_ENC_SCALE_NUM)
epicsEnvUnset(ECMC_ENC_TYPE)
epicsEnvUnset(ECMC_ENC_BITS)
epicsEnvUnset(ECMC_ENC_ABS_BITS)
epicsEnvUnset(ECMC_ENC_ABS_OFFSET)
epicsEnvUnset(ECMC_ENC_VEL_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_SIZE)
epicsEnvUnset(ECMC_ENC_POS_FILTER_ENABLE)
epicsEnvUnset(ECMC_EC_ENC_RESET)
epicsEnvUnset(ECMC_EC_ENC_ALARM_0)
epicsEnvUnset(ECMC_EC_ENC_ALARM_1)
epicsEnvUnset(ECMC_EC_ENC_ALARM_2)
epicsEnvUnset(ECMC_EC_ENC_WARNING)
epicsEnvUnset(ECMC_EC_MON_LOWLIM)
epicsEnvUnset(ECMC_EC_MON_HIGHLIM)
epicsEnvUnset(ECMC_EC_MON_HOME_SWITCH)
epicsEnvUnset(ECMC_EC_MON_EXT_INTERLOCK)
epicsEnvUnset(ECMC_MON_AT_TARGET_TOL)
epicsEnvUnset(ECMC_MON_AT_TARGET_TIME)
epicsEnvUnset(ECMC_MON_AT_TARGET_ENA)
epicsEnvUnset(ECMC_MON_LAG_MON_TOL)
epicsEnvUnset(ECMC_MON_LAG_MON_TIME)
epicsEnvUnset(ECMC_MON_LAG_MON_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX)
epicsEnvUnset(ECMC_MON_VELO_MAX_ENA)
epicsEnvUnset(ECMC_MON_VELO_MAX_DRV_TIME)
epicsEnvUnset(ECMC_MON_VELO_MAX_TRAJ_TIME)
epicsEnvUnset(ECMC_MRES)
epicsEnvUnset(ECMC_JOG_VEL)
epicsEnvUnset(ECMC_JAR)
epicsEnvUnset(ECMC_HOME_PROC)
epicsEnvUnset(ECMC_HOME_POS)
epicsEnvUnset(ECMC_HOME_ACC)
epicsEnvUnset(ECMC_HOME_DEC)
epicsEnvUnset(ECMC_DRV_TYPE)
epicsEnvUnset(ECMC_VELO)
epicsEnvUnset(ECMC_SOFT_LOW_LIM)
epicsEnvUnset(ECMC_SOFT_HIGH_LIM)
epicsEnvUnset(ECMC_HOME_POS_MOVE_ENA)
epicsEnvUnset(ECMC_HOME_POS_MOVE_TARG_POS)
epicsEnvUnset(ECMC_TRAJ_TYPE)
epicsEnvUnset(ECMC_JERK)
# reset PREFIX
epicsEnvSet("ECMC_PREFIX"      "IOC_TEST:")
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/applyAxisSynchronization.cmd, CONFIG=./cfg/freq.sax)
#==============================================================================
# applyAxisSynchronization.cmd
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'FULL'='DAQ'","ecmcExit Error: ECMC started in DAQ mode. Motion not supported..","#-")
epicsEnvUnset(ECMC_EXE_CMD)
iocshLoad ./cfg/freq.sax
############# Encoder
epicsEnvSet("ECMC_ENC_SOURCE",                 "1")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_ENC_VELO_FILT_ENABLE",       "0")      # Enable velocity filter
epicsEnvSet("ECMC_ENC_VELO_FILT_SIZE",         "10")     # Encoder velocity Low pass filter size
############# Trajectory
epicsEnvSet("ECMC_TRAJ_SOURCE",                "0")      # 0 Internal (from hardware), 1 from PLC
epicsEnvSet("ECMC_TRAJ_VELO_FILT_ENABLE",      "0")      # Enable velocity filter
epicsEnvSet("ECMC_TRAJ_VELO_FILT_SIZE",        "10")     # Trajectory velocity Low pass filter size
############# Commands
epicsEnvSet("ECMC_CMD_FRM_OTHER_PLC_ENABLE",   "1")      # Allow commands from PLC
epicsEnvSet("ECMC_CMD_AXIS_PLC_ENABLE",        "1")      # Enable Axis PLC
# Each line below is appended to one single expression/source. 
# Executed in sync with axis (before)
epicsEnvSet("ECMC_AXIS_EXPR_LINE_1",           "ax7.enc.actpos:=ax7.traj.setpos|")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_2",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_3",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_4",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_5",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_6",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_7",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_8",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_9",           "")
epicsEnvSet("ECMC_AXIS_EXPR_LINE_10",          "")
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync.cmd
#==============================================================================
# ecmc_axis_sync.cmd
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEnable(7,1)"
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)=ax7.enc.actpos:=ax7.traj.setpos|"
OK
ecmc
if(plc0.firstscan) {
  println('State 0: Trying to enable physical axes');
}

#State 0: Power physical axis and home to 0
if(static.state = 0) {  
  mc_power(1,1);
  mc_power(2,1);
}

if(ax1.drv.enabled and ax2.drv.enabled and (static.state = 0)) {
  println('State 1: Home');
  # Physical axes
  mc_home_pos(1,1,1,5,5,-90);
  mc_home_pos(2,1,1,5,5,-90);
  # Make sure virt axes are 0
  #mc_home_pos(3,1,15,5,5,0);
  #mc_home_pos(4,1,15,5,5,0);
  #mc_home_pos(5,1,15,5,5,0);
  #mc_home_pos(6,1,15,5,5,0);
  #mc_home_pos(7,1,15,5,5,0.5);  # start at 0.5Hz
  static.state:=1;
}

if((static.state = 1) and ax1.enc.homed and ax2.enc.homed and not(mc_get_busy(1)) and not(mc_get_busy(2))) {
  println('State 1: Homing done');
  static.state := 2;
}

# State 2: Go to external source for physcal axes
if(static.state = 2) {
  ax1.traj.source:=1;
  ax2.traj.source:=1;  
  plc0.enable:=false;
  println('State 2: Startup done');
}
ConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.AppendAxisPLCExpr(7)="
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize(7,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable(7,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisEncSourceType(7,1)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize(7,10)"
OK
ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable(7,0)"
OK
ecmcConfigOrDie "Cfg.SetAxisTrajSourceType(7,0)"
OK
ecmcFileExist(/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd,1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/ecmc_axis_sync_unset.cmd
#==============================================================================
# ecmc_axis_sync_unset.cmd
epicsEnvUnset(ECMC_CMD_FRM_OTHER_PLC_ENABLE)
epicsEnvUnset(ECMC_CMD_AXIS_PLC_ENABLE)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_1)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_2)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_3)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_4)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_5)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_6)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_7)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_8)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_9)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_10)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_11)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_12)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_13)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_14)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_15)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_16)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_17)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_18)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_19)
epicsEnvUnset(ECMC_AXIS_EXPR_LINE_20)
epicsEnvUnset(ECMC_ENC_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_ENC_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_ENC_SOURCE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_SIZE)
epicsEnvUnset(ECMC_TRAJ_VELO_FILT_ENABLE)
epicsEnvUnset(ECMC_TRAJ_SOURCE)
##############################################################################
## PLC 0: Startup seq
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/loadPLCFile.cmd, "PLC_ID=0, SAMPLE_RATE_MS=100,FILE=./plc/startup.plc,PLC_MACROS='PLC_ID=0'"
#==============================================================================
# loadPLCFile.cmd
epicsEnvSet("ECMC_PLC_ID",              "0")
ecmcEpicsEnvSetCalc(ECMC_PLC_RATE_, "1000/500", "%f")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS",  "100")
ecmcEpicsEnvSetCalcTernary(ECMC_PLC_SAMPLE_RATE_MS, "100>0", "100","2.000000")
epicsEnvUnset(ECMC_PLC_RATE_) # clean up, temp variable
epicsEnvSet("ECMC_TMP_FILE",            "/tmp/PLC0.plc")
ecmcFileExist("./plc/startup.plc",1)
system "msi -V -M 'PLC_ID=0' -o /tmp/PLC0.plc ./plc/startup.plc"
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, 1=1,"", "#-"  )
########### Parsed PLC file:
system "cat /tmp/PLC0.plc"
############ PLC file end
#
epicsEnvUnset(ECMC_EXE_CMD)
ecmcFileExist("/tmp/PLC0.plc",1)
ecmcConfigOrDie "Cfg.CreatePLC(0,100)"
OK
ecmcConfigOrDie "Cfg.LoadPLCFile(0,/tmp/PLC0.plc)"
OK
system "rm -f /tmp/PLC0.plc"
ecmcFileExist(ecmcPlc.substitutions,1,1)
ecmcEpicsEnvSetCalc(ECMC_PLC_ID_2_CHARS, "0", "%02d")
dbLoadTemplate(ecmcPlc.substitutions, "PORT=MC_CPU1,A=0,Index=0,Name=IOC_TEST:,Index2Char=00,T_SMP_MS=10")
epicsEnvUnset(ECMC_PLC_ID_2_CHARS)
epicsEnvSet(ECMC_PLCS_CFG,"0,")
##################################################################2023/03/03 13:16:23.458 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000036
2023/03/03 13:16:23.458 ecmcMotorRecord:: poll(2) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:23.458 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:23.458 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000006
2023/03/03 13:16:23.458 ecmcMotorRecord:: poll(3) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:23.458 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000006
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(4) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(5) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(5) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(6) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(6) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(7) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=0 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(7) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:23.459 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=4 old=-1 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:24.367 EtherCAT bus ready (not scaning).
2023/03/03 13:16:24.368 INFO: Locking memory
2023/03/03 13:16:24.384 Starting up EtherCAT bus: 0 second(s). Max wait time 30 second(s).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 1): Motion interlocked (type 16).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:494: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 1): Motion interlocked (type 7).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:182: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 2): Motion interlocked (type 16).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcMonitor.cpp/checkLimits:494: ERROR_MON_BOTH_LIMIT_INTERLOCK (0x14c10).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 2): Motion interlocked (type 7).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcAxisReal.cpp/execute:182: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 3): Motion interlocked (type 16).
2023/03/03 13:16:24.469 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 4): Motion interlocked (type 16).
2023/03/03 13:16:24.470 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 5): Motion interlocked (type 16).
2023/03/03 13:16:24.470 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 6): Motion interlocked (type 16).
2023/03/03 13:16:24.470 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 7): Motion interlocked (type 16).
2023/03/03 13:16:24.470 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 7: Not operational (0x24011).
2023/03/03 13:16:24.470 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2023/03/03 13:16:24.470 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 8: Not operational (0x24011).
2023/03/03 13:16:24.470 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2023/03/03 13:16:24.470 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 9: Not operational (0x24011).
2023/03/03 13:16:24.470 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(1) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000005
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(1) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2023/03/03 13:16:24.659 ecmcMotorRecord:: sErrorMessage(1)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=1 old=4 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(2) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(2) bError=1 drvlocal.statusBinData.onChangeData.error=0x14315
2023/03/03 13:16:24.659 ecmcMotorRecord:: sErrorMessage(2)="ERROR_AXIS_HARDWARE_STATUS_NOT_OK"
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=1 old=4 ErrID=0x14315 old=0x0 Warn=0 nCmd=0 old=0 txt=E: ERROR_AXIS_HARDWARE_STATUS_NOT_OK (0x14315)
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(3) homed=1
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(3) LLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(3) HLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(4) homed=1
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(4) LLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(4) HLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(5) homed=1
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(5) LLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(5) HLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(6) homed=1
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(6) LLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(6) HLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(7) homed=1
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(7) LLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(7) HLS=0
2023/03/03 13:16:24.659 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:25.384 Starting up EtherCAT bus: 1 second(s). Max wait time 30 second(s).
2023/03/03 13:16:25.499 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 1): Motion interlocked (type 16).
2023/03/03 13:16:25.499 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 2): Motion interlocked (type 16).
2023/03/03 13:16:25.660 ecmcMotorRecord:: poll(1) LLS=0
2023/03/03 13:16:25.660 ecmcMotorRecord:: poll(1) HLS=0
2023/03/03 13:16:25.660 ecmcMotorRecord:: poll(2) LLS=0
2023/03/03 13:16:25.660 ecmcMotorRecord:: poll(2) HLS=0
2023/03/03 13:16:25.977 ../devEcmcSup/main/ecmcError.cpp/errorReset:119: NO_ERROR (0x0).
2023/03/03 13:16:25.977 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 1): Motion interlock cleared.
2023/03/03 13:16:25.977 ../devEcmcSup/main/ecmcError.cpp/errorReset:119: NO_ERROR (0x0).
2023/03/03 13:16:25.977 ../devEcmcSup/main/ecmcError.cpp/errorReset:119: NO_ERROR (0x0).
2023/03/03 13:16:25.977 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 2): Motion interlock cleared.
2023/03/03 13:16:25.977 ../devEcmcSup/main/ecmcError.cpp/errorReset:119: NO_ERROR (0x0).
2023/03/03 13:16:25.977 ../devEcmcSup/main/ecmcError.cpp/errorReset:119: NO_ERROR (0x0).
2023/03/03 13:16:25.977 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 3): Motion interlock cleared.
2023/03/03 13:16:25.977 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 4): Motion interlock cleared.
2023/03/03 13:16:25.977 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 5): Motion interlock cleared.
2023/03/03 13:16:25.978 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 6): Motion interlock cleared.
2023/03/03 13:16:25.978 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 7): Motion interlock cleared.
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(1) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=4 old=1 ErrID=0x0 old=0x14315 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(2) bError=0 drvlocal.statusBinData.onChangeData.error=0x0
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=4 old=1 ErrID=0x0 old=0x14315 Warn=0 nCmd=0 old=0 txt=NULL
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(3) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(4) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(5) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(6) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000001
2023/03/03 13:16:26.060 ecmcMotorRecord:: poll(7) mvnNRdy=0 bBusy=0 bExecute=0 bEnabled=0 atTarget=1 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000002
2023/03/03 13:16:27.060 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=57286 fPos=-0.7566 fActPosition=-0.759375 time=0.000004
2023/03/03 13:16:27.060 ecmcMotorRecord:: poll(1) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=10 old=0 txt=NULL
2023/03/03 13:16:27.060 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=45105 fPos=-0.7566 fActPosition=-0.759375 time=0.000002
2023/03/03 13:16:27.060 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=0 old=4 ErrID=0x0 old=0x0 Warn=0 nCmd=10 old=0 txt=NULL
2023/03/03 13:16:27.384 EtherCAT bus started!
2023/03/03 13:16:27.384 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocBuild (0). Allow callbacks: true.
Starting iocInit
2023/03/03 13:16:27.384 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtBeginning (1). Allow callbacks: true.
2023/03/03 13:16:27.387 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCallbackInit (2). Allow callbacks: true.
2023/03/03 13:16:27.388 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaLinkInit (3). Allow callbacks: true.
2023/03/03 13:16:27.388 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDrvSup (4). Allow callbacks: true.
2023/03/03 13:16:27.388 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitRecSup (5). Allow callbacks: true.
2023/03/03 13:16:27.391 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDevSup (6). Allow callbacks: true.
2023/03/03 13:16:27.396 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.plc0.enable linked to record (asyn reason 1).
2023/03/03 13:16:27.397 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.reset linked to record (asyn reason 2).
2023/03/03 13:16:27.398 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.command linked to record (asyn reason 3).
2023/03/03 13:16:27.398 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.command linked to record (asyn reason 4).
2023/03/03 13:16:27.399 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.command linked to record (asyn reason 5).
2023/03/03 13:16:27.399 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.command linked to record (asyn reason 6).
2023/03/03 13:16:27.400 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.command linked to record (asyn reason 7).
2023/03/03 13:16:27.400 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.command linked to record (asyn reason 8).
2023/03/03 13:16:27.400 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.command linked to record (asyn reason 9).
2023/03/03 13:16:27.401 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.driveControl01 linked to record (asyn reason 10).
2023/03/03 13:16:27.401 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.velocitySetpoint01 linked to record (asyn reason 11).
2023/03/03 13:16:27.401 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.encoderControl01 linked to record (asyn reason 12).
2023/03/03 13:16:27.402 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.encoderValue01 linked to record (asyn reason 13).
2023/03/03 13:16:27.403 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.driveControl01 linked to record (asyn reason 14).
2023/03/03 13:16:27.403 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.velocitySetpoint01 linked to record (asyn reason 15).
2023/03/03 13:16:27.404 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.encoderControl01 linked to record (asyn reason 16).
2023/03/03 13:16:27.404 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.encoderValue01 linked to record (asyn reason 17).
2023/03/03 13:16:27.405 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.targpos linked to record (asyn reason 18).
2023/03/03 13:16:27.406 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.targvelo linked to record (asyn reason 19).
2023/03/03 13:16:27.406 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.targpos linked to record (asyn reason 20).
2023/03/03 13:16:27.407 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.targvelo linked to record (asyn reason 21).
2023/03/03 13:16:27.409 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.targpos linked to record (asyn reason 22).
2023/03/03 13:16:27.410 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.targvelo linked to record (asyn reason 23).
2023/03/03 13:16:27.410 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.targpos linked to record (asyn reason 24).
2023/03/03 13:16:27.411 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.targvelo linked to record (asyn reason 25).
2023/03/03 13:16:27.412 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.targpos linked to record (asyn reason 26).
2023/03/03 13:16:27.412 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.targvelo linked to record (asyn reason 27).
2023/03/03 13:16:27.413 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.targpos linked to record (asyn reason 28).
2023/03/03 13:16:27.414 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.targvelo linked to record (asyn reason 29).
2023/03/03 13:16:27.414 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.targpos linked to record (asyn reason 30).
2023/03/03 13:16:27.415 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.targvelo linked to record (asyn reason 31).
2023/03/03 13:16:27.416 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.driveStatus01 linked to record (asyn reason 32).
2023/03/03 13:16:27.416 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.encoderStatus01 linked to record (asyn reason 33).
2023/03/03 13:16:27.417 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.driveStatus01 linked to record (asyn reason 34).
2023/03/03 13:16:27.418 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.encoderStatus01 linked to record (asyn reason 35).
2023/03/03 13:16:27.418 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.diagnostic linked to record (asyn reason 36).
2023/03/03 13:16:27.419 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.plc.expression linked to record (asyn reason 37).
2023/03/03 13:16:27.419 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.diagnostic linked to record (asyn reason 38).
2023/03/03 13:16:27.419 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.plc.expression linked to record (asyn reason 39).
2023/03/03 13:16:27.420 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.diagnostic linked to record (asyn reason 40).
2023/03/03 13:16:27.420 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.plc.expression linked to record (asyn reason 41).
2023/03/03 13:16:27.421 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.diagnostic linked to record (asyn reason 42).
2023/03/03 13:16:27.421 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.plc.expression linked to record (asyn reason 43).
2023/03/03 13:16:27.421 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.diagnostic linked to record (asyn reason 44).
2023/03/03 13:16:27.422 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.plc.expression linked to record (asyn reason 45).
2023/03/03 13:16:27.422 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.diagnostic linked to record (asyn reason 46).
2023/03/03 13:16:27.423 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.plc.expression linked to record (asyn reason 47).
2023/03/03 13:16:27.423 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.diagnostic linked to record (asyn reason 48).
2023/03/03 13:16:27.424 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.plc.expression linked to record (asyn reason 49).
2023/03/03 13:16:27.424 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.msg linked to record (asyn reason 50).
2023/03/03 13:16:27.424 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.updated linked to record (asyn reason 51).
2023/03/03 13:16:27.425 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.slavestatus linked to record (asyn reason 52).
2023/03/03 13:16:27.425 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.slavestatus linked to record (asyn reason 53).
2023/03/03 13:16:27.426 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s9.slavestatus linked to record (asyn reason 54).
2023/03/03 13:16:27.427 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.status linked to record (asyn reason 55).
2023/03/03 13:16:27.428 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.errorid linked to record (asyn reason 56).
2023/03/03 13:16:27.429 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.warningid linked to record (asyn reason 57).
2023/03/03 13:16:27.429 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.status linked to record (asyn reason 58).
2023/03/03 13:16:27.430 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.errorid linked to record (asyn reason 59).
2023/03/03 13:16:27.431 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.warningid linked to record (asyn reason 60).
2023/03/03 13:16:27.432 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.status linked to record (asyn reason 61).
2023/03/03 13:16:27.432 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.errorid linked to record (asyn reason 62).
2023/03/03 13:16:27.433 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.warningid linked to record (asyn reason 63).
2023/03/03 13:16:27.434 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.status linked to record (asyn reason 64).
2023/03/03 13:16:27.434 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.errorid linked to record (asyn reason 65).
2023/03/03 13:16:27.435 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.warningid linked to record (asyn reason 66).
2023/03/03 13:16:27.436 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.status linked to record (asyn reason 67).
2023/03/03 13:16:27.437 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.errorid linked to record (asyn reason 68).
2023/03/03 13:16:27.437 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.warningid linked to record (asyn reason 69).
2023/03/03 13:16:27.438 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.status linked to record (asyn reason 70).
2023/03/03 13:16:27.439 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.errorid linked to record (asyn reason 71).
2023/03/03 13:16:27.440 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.warningid linked to record (asyn reason 72).
2023/03/03 13:16:27.441 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.status linked to record (asyn reason 73).
2023/03/03 13:16:27.441 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.errorid linked to record (asyn reason 74).
2023/03/03 13:16:27.442 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.warningid linked to record (asyn reason 75).
2023/03/03 13:16:27.443 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.masterstatus linked to record (asyn reason 76).
2023/03/03 13:16:27.444 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.slavecounter linked to record (asyn reason 77).
2023/03/03 13:16:27.445 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.memmapcounter linked to record (asyn reason 78).
2023/03/03 13:16:27.446 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.domainfailcountertotal linked to record (asyn reason 79).
2023/03/03 13:16:27.446 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.entrycounter linked to record (asyn reason 80).
2023/03/03 13:16:27.447 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.domainstatus linked to record (asyn reason 81).
2023/03/03 13:16:27.448 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s9.binaryInput01 linked to record (asyn reason 82).
2023/03/03 13:16:27.450 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s9.binaryInput02 linked to record (asyn reason 83).
2023/03/03 13:16:27.451 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s9.binaryInput03 linked to record (asyn reason 84).
2023/03/03 13:16:27.452 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s9.binaryInput04 linked to record (asyn reason 85).
2023/03/03 13:16:27.453 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.enable linked to record (asyn reason 86).
2023/03/03 13:16:27.455 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.firstscan linked to record (asyn reason 87).
2023/03/03 13:16:27.456 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.enable linked to record (asyn reason 88).
2023/03/03 13:16:27.458 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.firstscan linked to record (asyn reason 89).
2023/03/03 13:16:27.459 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.enable linked to record (asyn reason 90).
2023/03/03 13:16:27.461 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.firstscan linked to record (asyn reason 91).
2023/03/03 13:16:27.464 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.enable linked to record (asyn reason 92).
2023/03/03 13:16:27.465 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.firstscan linked to record (asyn reason 93).
2023/03/03 13:16:27.466 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.enable linked to record (asyn reason 94).
2023/03/03 13:16:27.468 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.firstscan linked to record (asyn reason 95).
2023/03/03 13:16:27.470 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.enable linked to record (asyn reason 96).
2023/03/03 13:16:27.472 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.firstscan linked to record (asyn reason 97).
2023/03/03 13:16:27.473 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.enable linked to record (asyn reason 98).
2023/03/03 13:16:27.475 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.firstscan linked to record (asyn reason 99).
2023/03/03 13:16:27.477 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.ok linked to record (asyn reason 100).
2023/03/03 13:16:27.479 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.control linked to record (asyn reason 101).
2023/03/03 13:16:27.480 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.control linked to record (asyn reason 102).
2023/03/03 13:16:27.481 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.control linked to record (asyn reason 103).
2023/03/03 13:16:27.483 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.control linked to record (asyn reason 104).
2023/03/03 13:16:27.485 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.control linked to record (asyn reason 105).
2023/03/03 13:16:27.486 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.control linked to record (asyn reason 106).
2023/03/03 13:16:27.488 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.control linked to record (asyn reason 107).
2023/03/03 13:16:27.489 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.ONE linked to record (asyn reason 108).
2023/03/03 13:16:27.491 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.ZERO linked to record (asyn reason 109).
2023/03/03 13:16:27.492 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.ONE linked to record (asyn reason 110).
2023/03/03 13:16:27.494 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.ZERO linked to record (asyn reason 111).
2023/03/03 13:16:27.496 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s9.ONE linked to record (asyn reason 112).
2023/03/03 13:16:27.497 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s9.ZERO linked to record (asyn reason 113).
2023/03/03 13:16:27.500 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.cmddata linked to record (asyn reason 114).
2023/03/03 13:16:27.503 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.cmddata linked to record (asyn reason 115).
2023/03/03 13:16:27.504 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.cmddata linked to record (asyn reason 116).
2023/03/03 13:16:27.506 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.cmddata linked to record (asyn reason 117).
2023/03/03 13:16:27.508 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.cmddata linked to record (asyn reason 118).
2023/03/03 13:16:27.511 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.cmddata linked to record (asyn reason 119).
2023/03/03 13:16:27.516 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.cmddata linked to record (asyn reason 120).
2023/03/03 13:16:27.519 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.positionActual01 linked to record (asyn reason 121).
2023/03/03 13:16:27.521 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s7.encoderLatchPostion01 linked to record (asyn reason 122).
2023/03/03 13:16:27.528 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.positionActual01 linked to record (asyn reason 123).
2023/03/03 13:16:27.530 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s8.encoderLatchPostion01 linked to record (asyn reason 124).
2023/03/03 13:16:27.536 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.actpos linked to record (asyn reason 125).
2023/03/03 13:16:27.538 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.actvel linked to record (asyn reason 126).
2023/03/03 13:16:27.539 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.setpos linked to record (asyn reason 127).
2023/03/03 13:16:27.541 ecmcAsynPortDriver:drvUserCreate: Parameter ax1.poserr linked to record (asyn reason 128).
2023/03/03 13:16:27.543 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax1.plc.error linked to record (asyn reason 129).
2023/03/03 13:16:27.544 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.actpos linked to record (asyn reason 130).
2023/03/03 13:16:27.546 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.actvel linked to record (asyn reason 131).
2023/03/03 13:16:27.547 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.setpos linked to record (asyn reason 132).
2023/03/03 13:16:27.549 ecmcAsynPortDriver:drvUserCreate: Parameter ax2.poserr linked to record (asyn reason 133).
2023/03/03 13:16:27.551 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax2.plc.error linked to record (asyn reason 134).
2023/03/03 13:16:27.553 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.actpos linked to record (asyn reason 135).
2023/03/03 13:16:27.555 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.actvel linked to record (asyn reason 136).
2023/03/03 13:16:27.557 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.setpos linked to record (asyn reason 137).
2023/03/03 13:16:27.558 ecmcAsynPortDriver:drvUserCreate: Parameter ax3.poserr linked to record (asyn reason 138).
2023/03/03 13:16:27.560 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax3.plc.error linked to record (asyn reason 139).
2023/03/03 13:16:27.562 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.actpos linked to record (asyn reason 140).
2023/03/03 13:16:27.563 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.actvel linked to record (asyn reason 141).
2023/03/03 13:16:27.565 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.setpos linked to record (asyn reason 142).
2023/03/03 13:16:27.567 ecmcAsynPortDriver:drvUserCreate: Parameter ax4.poserr linked to record (asyn reason 143).
2023/03/03 13:16:27.569 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax4.plc.error linked to record (asyn reason 144).
2023/03/03 13:16:27.570 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.actpos linked to record (asyn reason 145).
2023/03/03 13:16:27.572 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.actvel linked to record (asyn reason 146).
2023/03/03 13:16:27.574 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.setpos linked to record (asyn reason 147).
2023/03/03 13:16:27.576 ecmcAsynPortDriver:drvUserCreate: Parameter ax5.poserr linked to record (asyn reason 148).
2023/03/03 13:16:27.577 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax5.plc.error linked to record (asyn reason 149).
2023/03/03 13:16:27.579 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.actpos linked to record (asyn reason 150).
2023/03/03 13:16:27.581 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.actvel linked to record (asyn reason 151).
2023/03/03 13:16:27.583 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.setpos linked to record (asyn reason 152).
2023/03/03 13:16:27.585 ecmcAsynPortDriver:drvUserCreate: Parameter ax6.poserr linked to record (asyn reason 153).
2023/03/03 13:16:27.587 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax6.plc.error linked to record (asyn reason 154).
2023/03/03 13:16:27.589 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.actpos linked to record (asyn reason 155).
2023/03/03 13:16:27.591 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.actvel linked to record (asyn reason 156).
2023/03/03 13:16:27.593 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.setpos linked to record (asyn reason 157).
2023/03/03 13:16:27.594 ecmcAsynPortDriver:drvUserCreate: Parameter ax7.poserr linked to record (asyn reason 158).
2023/03/03 13:16:27.597 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.ax7.plc.error linked to record (asyn reason 159).
2023/03/03 13:16:27.599 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.plc0.scantime linked to record (asyn reason 160).
2023/03/03 13:16:27.600 ecmcAsynPortDriver:drvUserCreate: Parameter plcs.plc0.error linked to record (asyn reason 161).
2023/03/03 13:16:27.602 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.appmode linked to record (asyn reason 162).
2023/03/03 13:16:27.604 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.id linked to record (asyn reason 163).
2023/03/03 13:16:27.606 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.min linked to record (asyn reason 164).
2023/03/03 13:16:27.608 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.max linked to record (asyn reason 165).
2023/03/03 13:16:27.610 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.min linked to record (asyn reason 166).
2023/03/03 13:16:27.612 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.max linked to record (asyn reason 167).
2023/03/03 13:16:27.615 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.min linked to record (asyn reason 168).
2023/03/03 13:16:27.617 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.max linked to record (asyn reason 169).
2023/03/03 13:16:27.619 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.min linked to record (asyn reason 170).
2023/03/03 13:16:27.621 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.max linked to record (asyn reason 171).
2023/03/03 13:16:27.622 ecmcMotorRecord:: setIntegerParam(1 motorUpdateStatus_)=0
############
############# Configure diagnostics:
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
OK
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
OK
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
OK
ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
OK
ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
OK
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"
OK
# go active
iocshLoad (/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/setAppMode.cmd)
#==============================================================================
# setAppMode.cmd
ecmcFileExist("/home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/general.cmd",1)
iocshLoad /home/anderssandstrom/cellMods/base-7.0.6.1/require-4.0.0/ecmccfg/master/general.cmd
#==============================================================================
# general.cmd
ecmcFileExist("ecmcGeneral.db",1,1)
dbLoadRecords("ecmcGeneral.db","P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=0,ECMC_PROC_HOOK=")
# Examples of commands for info:
# ecmcReport <level> or asynReport <level>
# ecmcReport 3
# ecmcGrepParam <pattern>
# List all ecmc params for ethercat slave 2:
# ecmcGrepParam *s2*
#
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("ecmcEc.db",1,1)
 dbLoadRecords("ecmcEc.db","P=IOC_TEST:,ECMC_EC_MP=m,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,T_SMP_MS=10,TSE=0")
epicsEnvSet(ECMC_AXES_CFG,"[1, 2, 3, 4, 5, 6, 7, -1]")
epicsEnvSet(ECMC_DS_CFG,"[-1]")
epicsEnvSet(ECMC_PLG_CFG,"[-1]")
epicsEnvSet(ECMC_PLCS_CFG,"[0,-1]")
epicsEnvSet(ECMC_EC_CFG,"[7, 8, 9, -1]")
ecmcFileExist("ecmcMcuConfigs.db",1,1)
dbLoadRecords("ecmcMcuConfigs.db","P=IOC_TEST:,AXES_IDS='[1, 2, 3, 4, 5, 6, 7, -1]',PLC_IDS='[0,-1]',DS_IDS='[-1]', PLG_IDS='[-1]',M_ID=0 , EC_IDS='[7, 8, 9, -1]'")
epicsEnvUnset(ECMC_AXES_CFG)
epicsEnvUnset(ECMC_DS_CFG)
epicsEnvUnset(ECMC_PLG_CFG)
epicsEnvUnset(ECMC_EC_CFG)
ecmcConfigOrDie "Cfg.SetAppMode(1)"
State 0: Trying to enable physical axes
State 1: Home
OK
epicsEnvSet EPICS_DRIVER_PATH /home/anderssandstrom/cellMods//base-7.0.6.1/require-4.0.0:/home/anderssandstrom/sources/base-7.0.6.1/require/4.0.0/siteMods
# Set the IOC Prompt String One 
epicsEnvSet IOCSH_PS1 "localhost-23055 > "
#
# 
iocInit
############################################################################
## EPICS R7.0.6.1-E3-7.0.6.1-patch
## Rev. 2022-03-09T15:26+0100
############################################################################
2023/03/03 13:16:27.622 [devMotorAsyn.c:439  IOC_TEST:X] init_record IOC_TEST:X position=-2.704687 encoderPos=-2.704687 velocity=0.000000 MSTAstatus=0x0d28 flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2023/03/03 13:16:27.622 [devMotorAsyn.c:185  IOC_TEST:X] init_controller IOC_TEST:X set encoder ratio=1.000000 status=0
2023/03/03 13:16:27.622 [devMotorAsyn.c:266  IOC_TEST:X] update_soft_limits IOC_TEST:X RawHLM_RO=0.000000 RawLLM_RO=0.000000 valid=0 DHLM_RO=0.000000 DLLM_RO=0.000000
2023/03/03 13:16:27.622 [motorDevSup.c:327  IOC_TEST:X] PositionRestoreNeeded IOC_TEST:X rstm=2 dval=0.000000 drbv=-2.704687 pmr->rdbd=0.100000 rdbd=0.100000 pmr->mres=0.004687 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2023/03/03 13:16:27.622 [motorRecord.cc:782  IOC_TEST:X] init_re_init start neverPolled=0 stat=17 nsta=0
2023/03/03 13:16:27.622 [motorRecord.cc:720  IOC_TEST:X] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=0.004687
2023/03/03 13:16:27.622 [motorRecord.cc:833  IOC_TEST:X] init_re_init  end dval=-2.704687 drbv=-2.704687 rdbd=0.100000 spdb=0.100000
2023/03/03 13:16:27.622 [motorRecord.cc:968  IOC_TEST:X] init_record process_reason="callbackdata + soft limits" dval=-2.704687 drbv=-2.704687 rdbd=0.100000 spdb=0.100000 stat=0 msta=0xd28 neverPolled=0
2023/03/03 13:16:27.622 [devMotorAsyn.c:439  IOC_TEST:amplitudeX] init_record IOC_TEST:amplitudeX position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2023/03/03 13:16:27.624 [devMotorAsyn.c:185  IOC_TEST:amplitudeX] init_controller IOC_TEST:amplitudeX set encoder ratio=1.000000 status=0
2023/03/032023/03/03 13:16:27.624 ecmcMotorRecord:: setIntegerParam(3 motorUpdateStatus_)=0
2023/03/03 13:16:27.625 ecmcMotorRecord:: setIntegerParam(4 motorUpdateStatus_)=0
 13:16:27.624 [devMotorAsyn.c:266  IOC_TEST:amplitudeX] update_soft_limits IOC_TEST:amplitudeX RawHLM_RO=70.000000 RawLLM_RO=-70.000000 valid=1 DHLM_RO=70.000000 DLLM_RO=-70.000000
2023/03/03 13:16:27.624 [motorDevSup.c:327  IOC_TEST:amplitudeX] PositionRestoreNeeded IOC_TEST:amplitudeX rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2023/03/03 13:16:27.624 [motorRecord.cc:782  IOC_TEST:amplitudeX] init_re_init start neverPolled=0 stat=17 nsta=0
2023/03/03 13:16:27.624 [motorRecord.cc:720  IOC_TEST:amplitudeX] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=1.000000
2023/03/03 13:16:27.624 [motorRecord.cc:4484 IOC_TEST:amplitudeX] pmr->dhlm=70 softLimitRO=70
2023/03/03 13:16:27.624 [motorRecord.cc:4545 IOC_TEST:amplitudeX] pmr->dllm=-70 softLimitRO=-70
2023/03/03 13:16:27.624 [motorRecord.cc:833  IOC_TEST:amplitudeX] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2023/03/03 13:16:27.624 [motorRecord.cc:968  IOC_TEST:amplitudeX] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0x490a neverPolled=0
2023/03/03 13:16:27.625 [devMotorAsyn.c:439  IOC_TEST:amplitudeY] init_record IOC_TEST:amplitudeY position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2023/03/03 13:16:27.625 [devMotorAsyn.c:185  IOC_TEST:amplitudeY] init_controller IOC_TEST:amplitudeY set encoder ratio=1.000000 status=0
2023/03/03 13:16:27.625 [devMotorAsyn.c:266  IOC_TEST:amplitudeY] update_soft_limits IOC_TEST:amplitudeY RawHLM_RO=70.000000 RawLLM_RO=-70.000000 valid=1 DHLM_RO=70.000000 DLLM_RO=-70.000000
2023/03/03 13:16:27.625 [motorDevSup.c:327  IOC_TEST:amplitudeY] PositionRestoreNeeded IOC_TEST:amplitudeY rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2023/03/03 13:16:27.625 [motorRecord.cc:782  IOC_TEST:amplitudeY] init_re_init start neverPolled=0 stat=17 nsta=0
2023/03/03 13:16:27.625 [motorRecord.cc:720  IOC_TEST:amplitudeY] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=1.000000
2023/03/03 13:16:27.625 [motorRecord.cc:4484 IOC_TEST:amplitudeY] pmr->dhlm=70 softLimitRO=70
2023/03/03 13:16:27.625 [motorRecord.cc:4545 IOC_TEST:amplitudeY] pmr->dllm=-70 softLimitRO=-70
2023/03/03 13:16:27.625 [motorRecord.cc:833  IOC_TEST:amplitudeY] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2023/03/03 13:16:27.625 [motorRecord.cc:968  IOC_TEST:amplitudeY] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0x490a neverPolled=0
2023/03/03 13:16:27.625 [devMotorAsyn.c:439  IOC_TEST:offsetX] init_record IOC_TEST:offsetX position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2023/03/03 13:16:27.625 [devMotorAsyn.c:185  IOC_TEST:offsetX] init_controller IOC_TEST:offsetX set encoder ratio=1.000000 status=0
2023/03/03 13:16:27.625 [devMotorAsyn.c:266  IOC_TEST:offsetX] update_soft_limits IOC_TEST:offsetX RawHLM_RO=70.000000 RawLLM_RO=-70.000000 valid=1 DHLM_RO=70.000000 DLLM_RO=-70.000000
2023/03/03 13:16:27.625 [motorDevSup.c:327  IOC_TEST:offsetX] PositionRestoreNeeded IOC_TEST:offsetX rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2023/03/03 13:16:27.625 [motorRecord.cc:782  IOC_TEST:offsetX] init_re_init start neverPolled=0 stat=17 nsta=0
2023/03/03 13:16:27.625 [motorRecord.cc:720  IOC_TEST:offsetX] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=1.000000
2023/03/03 13:16:27.625 [motorRecord.cc:4484 IOC_TEST:offsetX] pmr->dhlm=70 softLimitRO=70
2023/03/03 13:16:27.625 [motorRecord.cc:4545 IOC_TEST:offsetX] pmr->dllm=-70 softLimitRO=-70
2023/03/03 13:16:27.625 [motorRecord.cc:833  IOC_TEST:offsetX] init_re_init  end dval=0.000000 drbv=0.0000002023/03/03 13:16:27.625 ecmcMotorRecord:: setIntegerParam(5 motorUpdateStatus_)=0
2023/03/03 13:16:27.625 ecmcMotorRecord:: setIntegerParam(6 motorUpdateStatus_)=0
2023/03/03 13:16:27.626 ecmcMotorRecord:: setIntegerParam(7 motorUpdateStatus_)=0
2023/03/03 13:16:27.643 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDatabase (7). Allow callbacks: true.
2023/03/03 13:16:27.644 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterFinishDevSup (8). Allow callbacks: true.
 rdbd=0.100000 spdb=0.100000
2023/03/03 13:16:27.625 [motorRecord.cc:968  IOC_TEST:offsetX] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0x490a neverPolled=0
2023/03/03 13:16:27.625 [devMotorAsyn.c:439  IOC_TEST:offsetY] init_record IOC_TEST:offsetY position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2023/03/03 13:16:27.625 [devMotorAsyn.c:185  IOC_TEST:offsetY] init_controller IOC_TEST:offsetY set encoder ratio=1.000000 status=0
2023/03/03 13:16:27.625 [devMotorAsyn.c:266  IOC_TEST:offsetY] update_soft_limits IOC_TEST:offsetY RawHLM_RO=70.000000 RawLLM_RO=-70.000000 valid=1 DHLM_RO=70.000000 DLLM_RO=-70.000000
2023/03/03 13:16:27.625 [motorDevSup.c:327  IOC_TEST:offsetY] PositionRestoreNeeded IOC_TEST:offsetY rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2023/03/03 13:16:27.625 [motorRecord.cc:782  IOC_TEST:offsetY] init_re_init start neverPolled=0 stat=17 nsta=0
2023/03/03 13:16:27.625 [motorRecord.cc:720  IOC_TEST:offsetY] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=1.000000
2023/03/03 13:16:27.625 [motorRecord.cc:4484 IOC_TEST:offsetY] pmr->dhlm=70 softLimitRO=70
2023/03/03 13:16:27.625 [motorRecord.cc:4545 IOC_TEST:offsetY] pmr->dllm=-70 softLimitRO=-70
2023/03/03 13:16:27.625 [motorRecord.cc:833  IOC_TEST:offsetY] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2023/03/03 13:16:27.625 [motorRecord.cc:968  IOC_TEST:offsetY] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0x490a neverPolled=0
2023/03/03 13:16:27.625 [devMotorAsyn.c:439  IOC_TEST:freq] init_record IOC_TEST:freq position=0.000000 encoderPos=0.000000 velocity=0.000000 MSTAstatus=0x490a flagsValue=0x3f flagsWritten=0x3f pmr->mflg=0x0
2023/03/03 13:16:27.626 [devMotorAsyn.c:185  IOC_TEST:freq] init_controller IOC_TEST:freq set encoder ratio=1.000000 status=0
2023/03/03 13:16:27.626 [devMotorAsyn.c:266  IOC_TEST:freq] update_soft_limits IOC_TEST:freq RawHLM_RO=10.000000 RawLLM_RO=-10.000000 valid=1 DHLM_RO=10.000000 DLLM_RO=-10.000000
2023/03/03 13:16:27.626 [motorDevSup.c:327  IOC_TEST:freq] PositionRestoreNeeded IOC_TEST:freq rstm=2 dval=0.000000 drbv=0.000000 pmr->rdbd=0.100000 rdbd=1.000000 pmr->mres=1.000000 pmr->mflg=0x3f dval_non_zero_pos_near_zero=0 ret=0
2023/03/03 13:16:27.626 [motorRecord.cc:782  IOC_TEST:freq] init_re_init start neverPolled=0 stat=17 nsta=0
2023/03/03 13:16:27.626 [motorRecord.cc:720  IOC_TEST:freq] enforceMinRetryDeadband spdb=0.100000 rdbd=0.100000 mres=1.000000
2023/03/03 13:16:27.626 [motorRecord.cc:4484 IOC_TEST:freq] pmr->dhlm=10 softLimitRO=10
2023/03/03 13:16:27.626 [motorRecord.cc:4545 IOC_TEST:freq] pmr->dllm=-10 softLimitRO=-10
2023/03/03 13:16:27.626 [motorRecord.cc:833  IOC_TEST:freq] init_re_init  end dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000
2023/03/03 13:16:27.626 [motorRecord.cc:968  IOC_TEST:freq] init_record process_reason="callbackdata + soft limits" dval=0.000000 drbv=0.000000 rdbd=0.100000 spdb=0.100000 stat=0 msta=0x490a neverPolled=0
2023/03/03 13:16:27.660 [motorRecord.cc:1627 IOC_TEST:X] mipSetBit EXTERNAL(Ex) old='' new=EXTERNAL(Ex)
2023/03/03 13:16:28.161 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterScanInit (9). Allow callbacks: true.
2023/03/03 13:16:28.162 ecmcMotorRecord:: setDoubleParam(1 HomPos_)=-90.000000
2023/03/03 13:16:28.162 ecmcMotorRecord:: setDoubleParam(2 HomPos_)=-90.000000
2023/03/03 13:16:28.162 ecmcMotorRecord:: setDoubleParam(3 HomPos_)=0.000000
2023/03/03 13:16:28.162 ecmcMotorRecord:: setDoubleParam(4 HomPos_)=0.000000
2023/03/03 13:16:28.162 ecmcMotorRecord:: setDoubleParam(5 HomPos_)=0.000000
2023/03/03 13:16:28.162 ecmcMotorRecord:: setDoubleParam(6 HomPos_)=0.000000
2023/03/03 13:16:28.162 ecmcMotorRecord:: setDoubleParam(7 HomPos_)=0.000000
2023/03/03 13:16:28.162 ecmcMotorRecord:: setIntegerParam(1 HomProc_)=1 motorNotHomedProblem=0
2023/03/03 13:16:28.163 ecmcMotorRecord:: setIntegerParam(2 HomProc_)=1 motorNotHomedProblem=0
2023/03/03 13:16:28.163 ecmcMotorRecord:: setIntegerParam(3 HomProc_)=3 motorNotHomedProblem=0
2023/03/03 13:16:28.163 ecmcMotorRecord:: setIntegerParam(4 HomProc_)=3 motorNotHomedProblem=0
2023/03/03 13:16:28.163 ecmcMotorRecord:: setIntegerParam(5 HomProc_)=3 motorNotHomedProblem=0
2023/03/03 13:16:28.163 ecmcMotorRecord:: setIntegerParam(6 HomProc_)=3 motorNotHomedProblem=0
2023/03/03 13:16:28.163 ecmcMotorRecord:: setIntegerParam(7 HomProc_)=3 motorNotHomedProblem=0
2023/03/03 13:16:28.163 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitialProcess (10). Allow callbacks: true.
2023/03/03 13:16:28.168 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (11). Allow callbacks: true.
2023/03/03 13:16:28.169 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocBuilt (12). Allow callbacks: true.
2023/03/03 13:16:28.175 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocRun (13). Allow callbacks: true.
2023/03/03 13:16:28.175 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterDatabaseRunning (14). Allow callbacks: true.
2023/03/03 13:16:28.175 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInterruptAccept (28). Allow callbacks: true.
2023/03/03 13:16:28.175 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaServerRunning (15). Allow callbacks: true.
2023/03/03 13:16:28.175 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (29). Allow callbacks: true.
iocRun: All initialization complete
2023/03/03 13:16:28.182 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocRunning (16). Allow callbacks: true.
[?1034hlocalhost-23055 > 2023/03/03 13:16:43.229 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 2): Motion interlocked (type 3).
2023/03/03 13:16:43.268 ecmcMotorRecord:: poll(2) LLS=1
2023/03/03 13:16:44.457 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 2): Motion interlock cleared.
2023/03/03 13:16:44.461 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 2): Motion interlocked (type 5).
2023/03/03 13:16:44.469 ecmcMotorRecord:: poll(2) LLS=0
2023/03/03 13:16:45.163 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 2): Motion interlock cleared.
2023/03/03 13:16:45.270 ecmcMotorRecord:: poll(2) homed=1
2023/03/03 13:16:50.623 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 1): Motion interlocked (type 3).
2023/03/03 13:16:50.673 ecmcMotorRecord:: poll(1) LLS=1
2023/03/03 13:16:50.673 [motorRecord.cc:1504 IOC_TEST:X] msta.Bits.RA_MINUS_LS=1
2023/03/03 13:16:51.801 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 1): Motion interlock cleared.
2023/03/03 13:16:51.805 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:185: INFO (axis 1): Motion interlocked (type 5).
2023/03/03 13:16:51.873 ecmcMotorRecord:: poll(1) LLS=0
2023/03/03 13:16:51.873 [motorRecord.cc:1504 IOC_TEST:X] msta.Bits.RA_MINUS_LS=0
2023/03/03 13:16:52.507 ../devEcmcSup/motion/ecmcAxisData.cpp/refreshInterlocks:187: INFO (axis 1): Motion interlock cleared.
2023/03/03 13:16:52.674 ecmcMotorRecord:: poll(1) homed=1
2023/03/03 13:16:52.674 [motorRecord.cc:1502 IOC_TEST:X] msta.Bits.RA_HOMED=1
2023/03/03 13:17:03.480 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=47314 fPos=0 fActPosition=0 time=0.000002
2023/03/03 13:17:03.680 ecmcMotorRecord:: poll(2) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=47314 fPos=0 fActPosition=0 time=0.000002
2023/03/03 13:17:03.680 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=10 txt=NULL
2023/03/03 13:17:10.884 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=0 atTarget=1 wf=0 ENC=51555 fPos=0 fActPosition=0 time=0.000002
State 1: Homing done
State 2: Startup done
2023/03/03 13:17:10.884 [motorRecord.cc:1522 IOC_TEST:X] msta.Bits.EA_POSITION power on=0
2023/03/03 13:17:10.884 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=0 atTarget=1 wf=0 ENC=47314 fPos=0 fActPosition=0 time=0.000001
2023/03/03 13:17:10.884 ecmcMotorRecord:: poll(2) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=10 old=0 txt=NULL

localhost-23055 > 2023/03/03 13:19:13.019 [motorRecord.cc:1696 IOC_TEST:freq] motor is stopped dval=0.000000 drbv=0.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x0('') msta=0x490a
2023/03/03 13:19:13.019 [motorRecord.cc:2013 IOC_TEST:freq] doRetryOrDone dval=0.500000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=0.500000 relbpos=0.500000 drbv=0.000000
2023/03/03 13:19:13.019 [motorRecord.cc:2030 IOC_TEST:freq] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:19:13.119 ecmcMotorRecord:: poll(7) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000004
2023/03/03 13:19:13.119 [motorRecord.cc:1510 IOC_TEST:freq] msta.Bits.RA_MOVING=1
2023/03/03 13:19:13.119 [motorRecord.cc:1522 IOC_TEST:freq] msta.Bits.EA_POSITION power on=1
2023/03/03 13:19:13.119 [motorRecord.cc:1530 IOC_TEST:freq] msta.Bits.RA_DONE=0
2023/03/03 13:19:13.319 ecmcMotorRecord:: poll(7) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=0.5 fActPosition=0.000198 time=0.000001
2023/03/03 13:19:13.319 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:19:13.719 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=51555 fPos=0 fActPosition=0 time=0.000003
2023/03/03 13:19:13.719 [motorRecord.cc:1522 IOC_TEST:X] msta.Bits.EA_POSITION power on=1
2023/03/03 13:19:13.719 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=47314 fPos=0 fActPosition=0 time=0.000002
2023/03/03 13:19:27.328 ecmcMotorRecord:: poll(7) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=0.5 fActPosition=0.5 time=0.000001
2023/03/03 13:19:27.528 ecmcMotorRecord:: poll(7) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=0.5 fActPosition=0.5 time=0.000024
2023/03/03 13:19:27.528 ecmcMotorRecord:: poll(7) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:19:27.528 [motorRecord.cc:1510 IOC_TEST:freq] msta.Bits.RA_MOVING=0
2023/03/03 13:19:27.528 [motorRecord.cc:1530 IOC_TEST:freq] msta.Bits.RA_DONE=1
2023/03/03 13:19:27.528 [motorRecord.cc:1696 IOC_TEST:freq] motor is stopped dval=0.500000 drbv=0.500000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:19:27.528 [motorRecord.cc:1243 IOC_TEST:freq] maybeRetry: close enough commandedDval=0.500000 last.dval=0.000000 dval=0.500000 drbv=0.500000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:19:27.528 [motorRecord.cc:1292 IOC_TEST:freq] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:19:27.528 [motorRecord.cc:2201 IOC_TEST:freq] too_small dval=0.500000 spdb=0.100000 mres=1.000000 drbv=0.500000
2023/03/03 13:19:29.377 [motorRecord.cc:1696 IOC_TEST:amplitudeX] motor is stopped dval=0.000000 drbv=0.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x0('') msta=0x490a
2023/03/03 13:19:29.377 [motorRecord.cc:2013 IOC_TEST:amplitudeX] doRetryOrDone dval=20.000000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=20.000000 relbpos=20.000000 drbv=0.000000
2023/03/03 13:19:29.377 [motorRecord.cc:2030 IOC_TEST:amplitudeX] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:19:29.477 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000004
2023/03/03 13:19:29.478 [motorRecord.cc:1510 IOC_TEST:amplitudeX] msta.Bits.RA_MOVING=1
2023/03/03 13:19:29.478 [motorRecord.cc:1522 IOC_TEST:amplitudeX] msta.Bits.EA_POSITION power on=1
2023/03/03 13:19:29.478 [motorRecord.cc:1530 IOC_TEST:amplitudeX] msta.Bits.RA_DONE=0
2023/03/03 13:19:29.678 ecmcMotorRecord:: poll(1) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=51554 fPos=-0.00495934 fActPosition=-0.0046875 time=0.000003
2023/03/03 13:19:29.678 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=20 fActPosition=0.00594 time=0.000001
2023/03/03 13:19:29.678 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:19:36.277 [motorRecord.cc:1696 IOC_TEST:amplitudeY] motor is stopped dval=0.000000 drbv=0.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x0('') msta=0x490a
2023/03/03 13:19:36.277 [motorRecord.cc:2013 IOC_TEST:amplitudeY] doRetryOrDone dval=30.000000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=30.000000 relbpos=30.000000 drbv=0.000000
2023/03/03 13:19:36.277 [motorRecord.cc:2030 IOC_TEST:amplitudeY] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:19:36.377 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2023/03/03 13:19:36.377 [motorRecord.cc:1510 IOC_TEST:amplitudeY] msta.Bits.RA_MOVING=1
2023/03/03 13:19:36.377 [motorRecord.cc:1522 IOC_TEST:amplitudeY] msta.Bits.EA_POSITION power on=1
2023/03/03 13:19:36.377 [motorRecord.cc:1530 IOC_TEST:amplitudeY] msta.Bits.RA_DONE=0
2023/03/03 13:19:36.577 ecmcMotorRecord:: poll(2) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=47314 fPos=-0.00133101 fActPosition=0 time=0.000003
2023/03/03 13:19:36.577 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=30 fActPosition=0.00594 time=0.000018
2023/03/03 13:19:36.577 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:19:45.989 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=20 fActPosition=20 time=0.000001
2023/03/03 13:19:46.189 ecmcMotorRecord:: poll(3) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=20 fActPosition=20 time=0.000002
2023/03/03 13:19:46.189 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:19:46.189 [motorRecord.cc:1510 IOC_TEST:amplitudeX] msta.Bits.RA_MOVING=0
2023/03/03 13:19:46.189 [motorRecord.cc:1530 IOC_TEST:amplitudeX] msta.Bits.RA_DONE=1
2023/03/03 13:19:46.189 [motorRecord.cc:1696 IOC_TEST:amplitudeX] motor is stopped dval=20.000000 drbv=20.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:19:46.189 [motorRecord.cc:1243 IOC_TEST:amplitudeX] maybeRetry: close enough commandedDval=20.000000 last.dval=0.000000 dval=20.000000 drbv=20.000000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:19:46.189 [motorRecord.cc:1292 IOC_TEST:amplitudeX] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:19:46.189 [motorRecord.cc:2201 IOC_TEST:amplitudeX] too_small dval=20.000000 spdb=0.100000 mres=1.000000 drbv=20.000000
2023/03/03 13:19:47.984 [motorRecord.cc:2013 IOC_TEST:amplitudeX] doRetryOrDone dval=30.000000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=10.000000 relbpos=10.000000 drbv=20.000000
2023/03/03 13:19:47.984 [motorRecord.cc:2030 IOC_TEST:amplitudeX] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:19:47.984 [motorRecord.cc:1530 IOC_TEST:amplitudeX] msta.Bits.RA_DONE=0
2023/03/03 13:19:47.984 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=3 ENC=0 fPos=20 fActPosition=20 time=0.000001
2023/03/03 13:19:47.984 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:19:47.984 [motorRecord.cc:1510 IOC_TEST:amplitudeX] msta.Bits.RA_MOVING=1
2023/03/03 13:19:48.184 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=30 fActPosition=20.0061 time=0.000001
2023/03/03 13:19:56.594 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=30 fActPosition=30 time=0.000002
2023/03/03 13:19:56.794 ecmcMotorRecord:: poll(4) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=30 fActPosition=30 time=0.000002
2023/03/03 13:19:56.794 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:19:56.794 [motorRecord.cc:1510 IOC_TEST:amplitudeY] msta.Bits.RA_MOVING=0
2023/03/03 13:19:56.794 [motorRecord.cc:1530 IOC_TEST:amplitudeY] msta.Bits.RA_DONE=1
2023/03/03 13:19:56.794 [motorRecord.cc:1696 IOC_TEST:amplitudeY] motor is stopped dval=30.000000 drbv=30.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:19:56.794 [motorRecord.cc:1243 IOC_TEST:amplitudeY] maybeRetry: close enough commandedDval=30.000000 last.dval=0.000000 dval=30.000000 drbv=30.000000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:19:56.794 [motorRecord.cc:1292 IOC_TEST:amplitudeY] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:19:56.794 [motorRecord.cc:2201 IOC_TEST:amplitudeY] too_small dval=30.000000 spdb=0.100000 mres=1.000000 drbv=30.000000
2023/03/03 13:19:59.597 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=30 fActPosition=30 time=0.000010
2023/03/03 13:19:59.797 ecmcMotorRecord:: poll(3) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=30 fActPosition=30 time=0.000008
2023/03/03 13:19:59.797 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:19:59.797 [motorRecord.cc:1510 IOC_TEST:amplitudeX] msta.Bits.RA_MOVING=0
2023/03/03 13:19:59.797 [motorRecord.cc:1530 IOC_TEST:amplitudeX] msta.Bits.RA_DONE=1
2023/03/03 13:19:59.797 [motorRecord.cc:1696 IOC_TEST:amplitudeX] motor is stopped dval=30.000000 drbv=30.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:19:59.797 [motorRecord.cc:1243 IOC_TEST:amplitudeX] maybeRetry: close enough commandedDval=30.000000 last.dval=20.000000 dval=30.000000 drbv=30.000000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:19:59.797 [motorRecord.cc:1292 IOC_TEST:amplitudeX] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:19:59.797 [motorRecord.cc:2201 IOC_TEST:amplitudeX] too_small dval=30.000000 spdb=0.100000 mres=1.000000 drbv=30.000000
2023/03/03 13:20:16.253 [motorRecord.cc:1696 IOC_TEST:offsetX] motor is stopped dval=0.000000 drbv=0.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x0('') msta=0x490a
2023/03/03 13:20:16.253 [motorRecord.cc:2013 IOC_TEST:offsetX] doRetryOrDone dval=20.000000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=20.000000 relbpos=20.000000 drbv=0.000000
2023/03/03 13:20:16.253 [motorRecord.cc:2030 IOC_TEST:offsetX] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:20:16.354 ecmcMotorRecord:: poll(5) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2023/03/03 13:20:16.354 [motorRecord.cc:1510 IOC_TEST:offsetX] msta.Bits.RA_MOVING=1
2023/03/03 13:20:16.354 [motorRecord.cc:1522 IOC_TEST:offsetX] msta.Bits.EA_POSITION power on=1
2023/03/03 13:20:16.354 [motorRecord.cc:1530 IOC_TEST:offsetX] msta.Bits.RA_DONE=0
2023/03/03 13:20:16.554 ecmcMotorRecord:: poll(5) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=20 fActPosition=0.00594 time=0.000001
2023/03/03 13:20:16.554 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:20:21.066 [motorRecord.cc:1696 IOC_TEST:offsetY] motor is stopped dval=0.000000 drbv=0.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x0('') msta=0x490a
2023/03/03 13:20:21.066 [motorRecord.cc:2013 IOC_TEST:offsetY] doRetryOrDone dval=20.000000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=20.000000 relbpos=20.000000 drbv=0.000000
2023/03/03 13:20:21.066 [motorRecord.cc:2030 IOC_TEST:offsetY] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:20:21.166 ecmcMotorRecord:: poll(6) mvnNRdy=1 bBusy=0 bExecute=0 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=0 fActPosition=0 time=0.000003
2023/03/03 13:20:21.166 [motorRecord.cc:1510 IOC_TEST:offsetY] msta.Bits.RA_MOVING=1
2023/03/03 13:20:21.166 [motorRecord.cc:1522 IOC_TEST:offsetY] msta.Bits.EA_POSITION power on=1
2023/03/03 13:20:21.166 [motorRecord.cc:1530 IOC_TEST:offsetY] msta.Bits.RA_DONE=0
2023/03/03 13:20:21.367 ecmcMotorRecord:: poll(6) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=20 fActPosition=0.00594 time=0.000002
2023/03/03 13:20:21.367 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:20:32.780 ecmcMotorRecord:: poll(5) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=20 fActPosition=20 time=0.000001
2023/03/03 13:20:32.981 ecmcMotorRecord:: poll(5) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=20 fActPosition=20 time=0.000001
2023/03/03 13:20:32.981 ecmcMotorRecord:: poll(5) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:20:32.981 [motorRecord.cc:1510 IOC_TEST:offsetX] msta.Bits.RA_MOVING=0
2023/03/03 13:20:32.981 [motorRecord.cc:1530 IOC_TEST:offsetX] msta.Bits.RA_DONE=1
2023/03/03 13:20:32.981 [motorRecord.cc:1696 IOC_TEST:offsetX] motor is stopped dval=20.000000 drbv=20.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:20:32.981 [motorRecord.cc:1243 IOC_TEST:offsetX] maybeRetry: close enough commandedDval=20.000000 last.dval=0.000000 dval=20.000000 drbv=20.000000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:20:32.981 [motorRecord.cc:1292 IOC_TEST:offsetX] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:20:32.981 [motorRecord.cc:2201 IOC_TEST:offsetX] too_small dval=20.000000 spdb=0.100000 mres=1.000000 drbv=20.000000
2023/03/03 13:20:37.585 ecmcMotorRecord:: poll(6) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=20 fActPosition=20 time=0.000001
2023/03/03 13:20:37.785 ecmcMotorRecord:: poll(6) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=20 fActPosition=20 time=0.000001
2023/03/03 13:20:37.785 ecmcMotorRecord:: poll(6) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:20:37.785 [motorRecord.cc:1510 IOC_TEST:offsetY] msta.Bits.RA_MOVING=0
2023/03/03 13:20:37.785 [motorRecord.cc:1530 IOC_TEST:offsetY] msta.Bits.RA_DONE=1
2023/03/03 13:20:37.785 [motorRecord.cc:1696 IOC_TEST:offsetY] motor is stopped dval=20.000000 drbv=20.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:20:37.785 [motorRecord.cc:1243 IOC_TEST:offsetY] maybeRetry: close enough commandedDval=20.000000 last.dval=0.000000 dval=20.000000 drbv=20.000000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:20:37.785 [motorRecord.cc:1292 IOC_TEST:offsetY] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:20:37.785 [motorRecord.cc:2201 IOC_TEST:offsetY] too_small dval=20.000000 spdb=0.100000 mres=1.000000 drbv=20.000000
2023/03/03 13:21:56.057 [motorRecord.cc:2013 IOC_TEST:amplitudeY] doRetryOrDone dval=40.000000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=10.000000 relbpos=10.000000 drbv=30.000000
2023/03/03 13:21:56.058 [motorRecord.cc:2030 IOC_TEST:amplitudeY] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:21:56.058 [motorRecord.cc:1530 IOC_TEST:amplitudeY] msta.Bits.RA_DONE=0
2023/03/03 13:21:56.058 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=3 ENC=0 fPos=30 fActPosition=30 time=0.000001
2023/03/03 13:21:56.058 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:21:56.058 [motorRecord.cc:1510 IOC_TEST:amplitudeY] msta.Bits.RA_MOVING=1
2023/03/03 13:21:56.258 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=40 fActPosition=30.0061 time=0.000002
2023/03/03 13:22:02.329 [motorRecord.cc:2013 IOC_TEST:amplitudeX] doRetryOrDone dval=40.000000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=10.000000 relbpos=10.000000 drbv=30.000000
2023/03/03 13:22:02.329 [motorRecord.cc:2030 IOC_TEST:amplitudeX] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:22:02.329 [motorRecord.cc:1530 IOC_TEST:amplitudeX] msta.Bits.RA_DONE=0
2023/03/03 13:22:02.329 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=3 ENC=0 fPos=30 fActPosition=30 time=0.000001
2023/03/03 13:22:02.329 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:22:02.329 [motorRecord.cc:1510 IOC_TEST:amplitudeX] msta.Bits.RA_MOVING=1
2023/03/03 13:22:02.529 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=40 fActPosition=30.0059 time=0.000002
2023/03/03 13:22:07.736 ecmcMotorRecord:: poll(4) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=40 fActPosition=40 time=0.000017
2023/03/03 13:22:07.936 ecmcMotorRecord:: poll(4) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=40 fActPosition=40 time=0.000002
2023/03/03 13:22:07.936 ecmcMotorRecord:: poll(4) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:22:07.936 [motorRecord.cc:1510 IOC_TEST:amplitudeY] msta.Bits.RA_MOVING=0
2023/03/03 13:22:07.936 [motorRecord.cc:1530 IOC_TEST:amplitudeY] msta.Bits.RA_DONE=1
2023/03/03 13:22:07.936 [motorRecord.cc:1696 IOC_TEST:amplitudeY] motor is stopped dval=40.000000 drbv=40.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:22:07.936 [motorRecord.cc:1243 IOC_TEST:amplitudeY] maybeRetry: close enough commandedDval=40.000000 last.dval=30.000000 dval=40.000000 drbv=40.000000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:22:07.936 [motorRecord.cc:1292 IOC_TEST:amplitudeY] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:22:07.936 [motorRecord.cc:2201 IOC_TEST:amplitudeY] too_small dval=40.000000 spdb=0.100000 mres=1.000000 drbv=40.000000
2023/03/03 13:22:13.942 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=40 fActPosition=40 time=0.000007
2023/03/03 13:22:14.142 ecmcMotorRecord:: poll(3) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=40 fActPosition=40 time=0.000001
2023/03/03 13:22:14.142 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:22:14.142 [motorRecord.cc:1510 IOC_TEST:amplitudeX] msta.Bits.RA_MOVING=0
2023/03/03 13:22:14.142 [motorRecord.cc:1530 IOC_TEST:amplitudeX] msta.Bits.RA_DONE=1
2023/03/03 13:22:14.142 [motorRecord.cc:1696 IOC_TEST:amplitudeX] motor is stopped dval=40.000000 drbv=40.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:22:14.142 [motorRecord.cc:1243 IOC_TEST:amplitudeX] maybeRetry: close enough commandedDval=40.000000 last.dval=30.000000 dval=40.000000 drbv=40.000000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:22:14.142 [motorRecord.cc:1292 IOC_TEST:amplitudeX] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:22:14.142 [motorRecord.cc:2201 IOC_TEST:amplitudeX] too_small dval=40.000000 spdb=0.100000 mres=1.000000 drbv=40.000000
2023/03/03 13:23:27.319 [motorRecord.cc:2013 IOC_TEST:amplitudeX] doRetryOrDone dval=-40.000000 rdbd=0.100000 spdb=0.100000 udf=0 stat=0 rcnt=0 pref_dir=1 relpos=-80.000000 relbpos=-80.000000 drbv=40.000000
2023/03/03 13:23:27.319 [motorRecord.cc:2030 IOC_TEST:amplitudeX] mipSetBit MOVE(Mo) old='' new=MOVE(Mo)
2023/03/03 13:23:27.319 [motorRecord.cc:1530 IOC_TEST:amplitudeX] msta.Bits.RA_DONE=0
2023/03/03 13:23:27.319 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=3 ENC=0 fPos=40 fActPosition=40 time=0.000001
2023/03/03 13:23:27.319 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=3 old=0 txt=NULL
2023/03/03 13:23:27.319 [motorRecord.cc:1510 IOC_TEST:amplitudeX] msta.Bits.RA_MOVING=1
2023/03/03 13:23:27.520 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=1 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=-40 fActPosition=39.9939 time=0.000001
2023/03/03 13:24:00.152 ecmcMotorRecord:: poll(3) mvnNRdy=1 bBusy=0 bExecute=1 bEnabled=1 atTarget=0 wf=0 ENC=0 fPos=-40 fActPosition=-40 time=0.000002
2023/03/03 13:24:00.353 ecmcMotorRecord:: poll(3) mvnNRdy=0 bBusy=0 bExecute=1 bEnabled=1 atTarget=1 wf=0 ENC=0 fPos=-40 fActPosition=-40 time=0.000001
2023/03/03 13:24:00.353 ecmcMotorRecord:: poll(3) callParamCallbacksUpdateError Error=0 old=0 ErrID=0x0 old=0x0 Warn=0 nCmd=0 old=3 txt=NULL
2023/03/03 13:24:00.353 [motorRecord.cc:1510 IOC_TEST:amplitudeX] msta.Bits.RA_MOVING=0
2023/03/03 13:24:00.353 [motorRecord.cc:1530 IOC_TEST:amplitudeX] msta.Bits.RA_DONE=1
2023/03/03 13:24:00.353 [motorRecord.cc:1696 IOC_TEST:amplitudeX] motor is stopped dval=-40.000000 drbv=-40.000000 pp=0 udf=0 stat=0 stop=0 pmr->spmg=GO mip=0x20(MOVE(Mo)) msta=0x492a
2023/03/03 13:24:00.353 [motorRecord.cc:1243 IOC_TEST:amplitudeX] maybeRetry: close enough commandedDval=-40.000000 last.dval=40.000000 dval=-40.000000 drbv=-40.000000 rdbd=0.100000 diff=0.000000 rcnt=0 pmr->rtry=1 mip=0x20(MOVE(Mo))
2023/03/03 13:24:00.353 [motorRecord.cc:1292 IOC_TEST:amplitudeX] mipClrBit 'Jf Jr J1 Hf Hr Mo Ry Lp Mb St Dr Da jS J2 Ex' old=MOVE(Mo) new=''
2023/03/03 13:24:00.353 [motorRecord.cc:2201 IOC_TEST:amplitudeX] too_small dval=-40.000000 spdb=0.100000 mres=1.000000 drbv=-40.000000
